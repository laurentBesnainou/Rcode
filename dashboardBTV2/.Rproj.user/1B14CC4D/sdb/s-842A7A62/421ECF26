{
    "collab_server" : "",
    "contents" : "\n\n\n\nui <- dashboardPage( \n  dashboardHeader(title = \"Dashboard - BT\"),\n  dashboardSidebar(\n    sidebarMenu(\n      tags$a(href=\"javascript:location.reload();\", \"Refresh\"),\n      menuItem(\"Chiffre d'affaire\", tabName = \"ca\", icon = icon(\"eur\")),\n      menuItem(\"Pipe\", tabName = \"pipe\", icon = icon(\"bar-chart-o\")),\n      menuItem(\"Miss. perdues\", tabName = \"lost\", icon = icon(\"thumbs-o-down\")),\n      tags$hr(),\n      \n      menuItem(\"Staffing\", tabName = \"staff\", icon = icon(\"tachometer\")),\n      \n      tags$hr(),\n      sliderInput(\"Annee\", label = \"Année:\", min = 2015, max = 2017, value = 2017, sep = \"\", step = 1, ticks = FALSE),\n      sliderInput(\"semaine\", label = \"Semaine:\", min = 1, max = maxWeek, value = maxWeek,step = 1),\n      checkboxGroupInput(\"uiChk1\", label = \"Offres\", \n                         choices = list(\"Transformation\"  , \"ETM\" , \"Data\" ,\"Digital Innovation\", \"PocLab\",\"Sécurité\"),\n                         selected = c(\"Transformation\"  , \"ETM\" , \"Data\" ,\"Digital Innovation\", \"PocLab\",\"Sécurité\")\n      ),\n      tags$hr(),\n      menuItem(\"Chargement data\", tabName = \"data\", icon = icon(\"table\"))\n    )\n  ),\n  dashboardBody(\n    tabItems(\n      tabItem(tabName = \"ca\",\n              fluidRow(\n                infoBoxOutput(\"ca_box\"),\n                infoBoxOutput(\"ca_production\"),\n                infoBoxOutput(\"nbMission\")\n              ),\n              navbarPage(\n                title = \"Chiffre d'affaires\",\n                tabPanel('Evolution', \n                    fluidRow(\n                  \n                      \n                      tabPanel('par semaine',   \n                               box(textOutput(\"legendDivID\"), title = \"Legend\", status = \"primary\", width=6),\n                               box(title = \"Evolution de Chiffre d'affaire en keuros en fonction des choix des offres\",\n                                   status = \"primary\",\n                                   width = 12,\n                                   dygraphOutput(\"dygraph1\")\n                               )\n                      )\n                    )\n                ),\n                tabPanel('Répartition', \n                         fluidRow(\n                           box(title = \"Liste des comptes\",\n                               width = 12, status = \"primary\",\n                               sliderInput(inputId = \"uiS5\", label = \"CA VENDU\", \n                                           min = 0,max = 5000, step=100, value = c(0,500)),\n                               plotOutput(\"ca_plot\")\n                           ),\n                           box(title = \"Données\",\n                               width = 12, status = \"info\",\n                               DT::dataTableOutput('DTCABT1')\n                           )\n                         )\n                ),\n                tabPanel('Evolutions Clients',     \n                         box(title = \"\",\n                             width = 12, status = \"primary\",\n                             htmlOutput(\"chartCABT\")\n                         )\n                ),\n                tabPanel('TreeMap',  \n                        \n                         box(title = \"\",\n                             width = 12, status = \"primary\",\n                         \n                                                   # D3partitionROutput(\"D3Part1\"),\n                                          D3partitionROutput(\"D3Part2\")\n                             )\n                             # radioButtons(\"radio\", label = h3(\"Regroupement\"),\n                             #              choices = list(\"Par associé\", \"Par Offre\", \"Par groupe\"), \n                             #              selected = \"Par groupe\",inline = TRUE),\n                             # radioButtons(\"radio2\",label = \"type\",\n                             #              choices = list(\"circleTreeMap\", \"partitionChart\", \"treeMap\", \"sunburst\",\n                             #                             \"collapsibleIndentedTree\", \"collapsibleTree\"), \n                             #              selected = \"sunburst\",inline = TRUE)\n                            \n                         \n                ),\n                tabPanel('Comparatifs 2015-2017',     \n                         \n                         box(title = \"Comparatif pour la semaine séléctionnée\",\n                             width = 12, status = \"primary\",\n                             plotOutput(\"radar_CA\")\n                         ),\n                         box(title = \"Comparaison des CA BT 2015 à 2017\",\n                             width = 12, status = \"primary\",\n                             plotOutput(\"compare_plot\"),\n                             selectInput(\"hc_theme\", label = \"format\", \n                                         choices = list(\"darkunica\", \"fivethirtyeight\",\"Dotabuff\",\n                                                        \"gridlight\",\"handdrawn\",\"economist\",\"financialTimes\",\"sandsignika\"), selected = \"economist\"),\n                             \n                             \n                             highchartOutput(\"hcontainer\", height = \"500px\")\n                         ),\n                         box(title = \"Comparaison des CA BT 2015 à 2017 pondérée par l'effectif\",\n                             width = 12, status = \"primary\",\n                             plotOutput(\"compare2_plot\")\n                         )\n                )\n                \n              )\n      ),\n      tabItem(tabName = \"pipe\",\n              fluidRow(\n                fluidRow(\n                  infoBoxOutput(\"pipe_ca\"),\n                  infoBoxOutput(\"pipe_caBT\"),\n                  infoBoxOutput(\"pipe_nb\")\n                  \n                  \n                )\n              ),\n              fluidRow(\n                # Copy the line below to make a slider range \n                box(width = 12, sliderInput(\"uiS1\", \n                                label = \"% chance de gagner\", \n                                min = 0,max = 100, value = c(0, 80)),\n                    checkboxGroupInput(\"uiChk2\",label =\"Step\",\n                                       choices = list(\"0 - A qualifier\"  , \"1 - Qualifiée\" , \"2 - A émettre\" ,\"3 - Emise\"),\n                                       inline = TRUE,\n                                       selected = c(\"3 - Emise\")\n                    )\n                )\n              ),\n              fluidRow(\n                navbarPage(\n                  title = \"Pipe\",\n                  tabPanel('Graphe par client',\n                           box(\n                               width = 12, status = \"info\",\n                               plotOutput(\"pipe1_plot\")\n                           )\n                  ),\n                  tabPanel('Données',\n                           box(width = 12, \n                               status = \"info\",\n                               DT::dataTableOutput('DTtable')\n                           )\n                  ),\n                  tabPanel('Visualisation',\n                           box(\n                               width = 12, status = \"info\",\n                               plotOutput(\"plotDiag\",height = 800)\n                           )\n                  ),\n                  \n                  tabPanel('Ecarts semaines',\n                           box(\n                             width = 12, status = \"info\",\n                             checkboxGroupInput(\"uiModifEcart\",label =\"MODIF\",\n                                                choices = list(\"AJOUT\"=\"+++\"  , \"SUPRESSION\"=\"---\" , \"MODIF\"=\"mod\"),\n                                                inline = TRUE,\n                                                selected = c(\"+++\"  , \"---\" , \"mod\")   ),\n                             checkboxGroupInput(\"uiStepEcart\",label =\"STEP\",\n                                                choices = list(\"0 - A qualifier\"  , \"1 - Qualifiée\" , \"2 - A émettre\" ,\"3 - Emise\", \"4 - Gagnée\", \"5 - No follow\",\"6 - En sommeil\",   \"7 - Perdue\"   ),\n                                                inline = TRUE,\n                                                selected = c(\"0 - A qualifier\"  , \"1 - Qualifiée\" , \"2 - A émettre\" ,\"3 - Emise\", \"4 - Gagnée\", \"5 - No follow\",\"6 - En sommeil\",   \"7 - Perdue\"   )\n                           )),\n                           DT::dataTableOutput('DTPIPEEcarts')\n                  ),\n                  \n                  tabPanel('Transformation du pipe',\n                           box(title = \"Evolution du Pipe entre les semaines 1 à 52\",\n                               width = 12, status = \"info\",\n                               sliderInput(\"uiS6\", label = \"N° Semaine\", min = 1, \n                                           max = 52, value = c(2, 52)),\n                               p(\"Processus utilisé:\"),\n                               p(\"On regarde les lignes dans le pipe entre les semaines en fonciton du pourcentage de Prob\"),\n                               p(\"A gauche le % en entrée. A droite évolution du %. La popup affiche le CA\n                                 sur la semaine de fin.\", \n                                 style = \"font-family: 'times'; font-si8pt\"),\n                               \"Données brutes\",\n                               htmlOutput(\"chartPipe3\"),\n                               DT::dataTableOutput('DTPipe2')\n                           )\n                           )))\n              \n      ),\n      tabItem(tabName = \"lost\",\n              fluidRow(\n                infoBoxOutput(\"lost1\",2 * 2),\n                infoBoxOutput(\"lost2\",2 * 2),\n                \n                    checkboxGroupInput(\"uiChk3\", label = \"\", \n                                       choices = list(\"6 - En sommeil\", \"7 - Perdue\", \"5 - No follow\"),\n                                       selected = c(\"7 - Perdue\"),\n                                       inline = TRUE\n                    ),\n                    sliderInput(\"uiS2\", \n                                label = \"\", \n                                min = 0,max = 900, value = c(0, 900))\n                \n              ),\n              fluidRow(plotOutput(\"lost_plot\"),\n                       DT::dataTableOutput('DTlost'))\n      ),\n      tabItem(tabName = \"data\", \n              fluidRow(\n                fileInput('file1', 'Ajouter les données de la semaine',\n                          accept=c('application/vnd.ms-excel',\n                                   'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n                                   '.xls',\n                                   '.xlsx')),\n                tags$hr(),\n                tableOutput(\"contents\")\n                \n              )),\n      tabItem(tabName = \"staff\",\n              fluidRow(\n                infoBoxOutput(\"saff1_box\"),\n                infoBoxOutput(\"saff2_box\"),\n                infoBoxOutput(\"saff3_box\"),\n                box(title = \"Mois & grades\",\n                    width =12, status = \"info\",\n                    solidHeader = TRUE,\n                    sliderInput(inputId = \"uiS3\", label = \"Mois\", \n                                min = 1,max = 12, step=1, value = c(1, 12) ),\n                    checkboxGroupInput(\"uiChk4\", label = \"\", \n                                       choices = list(\"2-C\", \"3-CC\", \"4-CS\", \"5-MNG\", \"6-SM\", \"7-DIR\", \"8-ASS\", \"A1-AE\", \"A2-AES\", \"D1-DS1\", \"D3-DS3\"),\n                                       selected = c(\"2-C\", \"3-CC\", \"4-CS\", \"5-MNG\", \"6-SM\", \"7-DIR\", \"8-ASS\", \"A1-AE\", \"A2-AES\", \"D1-DS1\", \"D3-DS3\"),\n                                       inline = TRUE\n                    )\n                )\n              ),\n              \n              navbarPage(\n                title = \"Staffing\",\n                tabPanel('Planning People',\n                         box(title = \"planning\",\n                             width =12,\n                             selectInput(\"selUI1\", 'ctl+A pour tous', people, multiple=TRUE, size=10, selected=people[1,1],\tselectize=FALSE),\n                             timevisOutput(\"timelineGroups\")\n                         )\n                ),\n                tabPanel('Planning Mission',\n                         box(title = \"planning\",\n                            \n                             width =12,\n                             selectInput(\"selUI2\", 'ctl+A pour tous', totem, multiple=TRUE, size=10, selected=totem[1,1],\tselectize=FALSE),\n                             \n                             timevisOutput(\"timelineGroupsTOTEM\")\n                         )\n                ),\n                tabPanel('Disponibilités',\n                         box(title = \"Taux de staffing (ferme + congès) \",\n                             width =12, status = \"info\",\n                             sliderInput(inputId = \"uiS4\", label = \"Filte de % staffing sur le mois courant\", \n                                         min = 0,max = 1, step=0.1, value = 0.5 ),\n                             actionButton(\"btn1\", label=\"Consultants\"),\n                             actionButton(\"btn2\", label=\"ADM\"),\n                             actionButton(\"btn3\", label=\"Architectes\"),\n                             actionButton(\"btn4\", label=\"Data scientists\"),\n                             plotOutput(\"staff4_plot\", height=450)\n                         )\n                ),\n                tabPanel('Modifictations',\n                         box(title = \"planning\",\n                             width =12,\n                             \"  1 = 'Ferme',2\t=\t'Prévi',3\t=\t'CONGES',4\t=\t'Formation',5\t=\t'Activités Internes ou à affecter', 6\t=\t'Arrêt maladie', 7\t=\t'Inactivité'\",\n                             selectInput(\"Staff\", 'ctl+A pour tous', Type_Staffing, multiple=TRUE, size=7, selected=Type_Staffing\n                                         ,\tselectize=FALSE)\n                             \n                         ),\n                         DT::dataTableOutput('DTSTAFF')\n                )\n              )\n      )\n    )\n  )\n)\n",
    "created" : 1498210463290.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2800884684",
    "id" : "421ECF26",
    "lastKnownWriteTime" : 1501152259,
    "last_content_update" : 1501152259957,
    "path" : "D:/tmp/dashboardBTV2/ui.R",
    "project_path" : "ui.R",
    "properties" : {
    },
    "relative_order" : 7,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}