{
    "collab_server" : "",
    "contents" : "\n# This is the server logic for a Shiny web application.\n# You can find out more about building applications with Shiny here:\n#\n# http://shiny.rstudio.com\n#\n\nlibrary(shiny)\n\nshinyServer(function(input, output) {\n\n  output$hcontainer <- renderHighchart({\n\n    p2015 <- pilotage_2015  %>% mutate(YEAR=2015) %>%\n      filter(STEP %in% c(\"1 - Qualifiée\", \"2 - A émettre\", \"3 - Emise\")) %>%\n      rename(CA_BT = CA_BT__N__KE) %>%select(STEP,\n                                             CA_BT,\n                                             OFFRE_PRINCIPALE,\n                                             WEEK,\n                                             YEAR)\n    p2016 <- pilotage_2016  %>% mutate(YEAR=2016) %>%\n      filter(STEP %in% c(\"1 - Qualifiée\", \"2 - A émettre\", \"3 - Emise\")) %>%\n      rename(CA_BT = CA_BT__N__KE) %>%select(STEP,\n                                             CA_BT,\n                                             OFFRE_PRINCIPALE,\n                                             WEEK,\n                                             YEAR)\n    \n    p2017 <- pilotage_data  %>% mutate(YEAR=2017) %>%\n      filter(STEP %in% c(\"1 - Qualifiée\", \"2 - A émettre\", \"3 - Emise\")) %>%\n      rename(CA_BT = CA_BT__N__KE) %>%select(STEP,\n                                             CA_BT,\n                                             OFFRE_PRINCIPALE,\n                                             WEEK,YEAR)\n    \n    pilotage_tot <- p2017\n    couleur <- c('#57B8FF')\n    if (2015 %in% input$Courbes) {\n      pilotage_tot <- bind_rows(p2015,p2017)\n      couleur <- c('#71A33C', '#57B8FF')\n    }\n    if (2016 %in% input$Courbes) {\n      pilotage_tot <- bind_rows(p2016,p2017)\n      couleur <- c( '#FF5151', '#57B8FF')\n    }\n    if (sum(c(2015,2016) %in% input$Courbes)==2) {\n      pilotage_tot <- bind_rows(p2015,p2016,p2017)\n      couleur <- c( '#71A33C','#FF5151', '#57B8FF')\n    }\n    \n    \n    plot_chart <- pilotage_tot %>% \n      mutate(YEAR = factor(YEAR)) %>% \n      group_by(YEAR, WEEK) %>% \n      summarise(CA_TOT = sum(CA_BT, na.rm = TRUE), Median=median(CA_BT, na.rm = TRUE), Moyenne=mean(CA_BT, na.rm = TRUE))\n    \n    hc <-  highchart() %>% \n      hc_add_series (plot_chart, name=\"moyenne\",type = \"line\",dashStyle= 'dot',marker = list(enabled = FALSE), #C ,marker = list(symbol = fa_icon_mark(\"eur\")),\n                     color= couleur, hcaes(x = WEEK, y = Moyenne, group = YEAR) ) %>% \n      hc_add_series (plot_chart, type = \"line\",marker = list(enabled = FALSE), #C ,marker = list(symbol = fa_icon_mark(\"eur\")),\n                     color= couleur, hcaes(x = WEEK, y = Median, group = YEAR) ) %>% \n      hc_subtitle(text = \"Pipe :Qualifiée, A émettre, Emise\") %>%\n      hc_title(text = \"Evolution du pipe Mediane (valeur moyenne en pointillé)\",\n               style = list(fontWeight = \"bold\")) %>% \n      hc_tooltip(crosshairs = TRUE, valueDecimals = 0,\n                 pointFormat = \"Semaine: {point.x} <br> CA e keuros: {point.y}\") %>%\n      hc_credits(enabled = TRUE, \n                 text = \"Sources: COBIZ 2015 - 2017\",\n                 style = list(fontSize = \"10px\")) %>%\n      hc_yAxis(title = list(text = \"Chiffre d'affaire\"),\n               labels = list(format = \"{value}\")) %>% \n      hc_xAxis(title = list(text = \"Numéro de semaine\"),\n               labels = list(format = \"{value}\")) %>% \n      hc_exporting(enabled = TRUE) # enable exporting option\n    \n    # # Determine theme and apply to highchart ------------------------\n    theme <-hc_theme_economist()\n    # theme <- switch(input$hc_theme,\n    #                 chalk = hc_theme_chalk(),\n    #                 darkunica = hc_theme_darkunica(),\n    #                 fivethirtyeight = hc_theme_538(),\n    #                 gridlight = hc_theme_gridlight(),\n    #                 handdrawn = hc_theme_handdrawn(),\n    #                 economist = hc_theme_economist(),\n    #                 financialTimes =hc_theme_ft(),\n    #                 Dotabuff=hc_theme_db(),\n    #                 flat=hc_theme_flat(),\n    #                 sandsignika = hc_theme_sandsignika()\n    # )\n    hc <- hc %>%\n      hc_add_theme(theme)\n    \n    \n\n    \n    \n    hc\n  })\n\n  output$hcTree <- renderHighchart({\n    \n\n    \n    p2017 <- pilotage_data  %>% mutate(YEAR=2017) %>%\n      filter(STEP %in% c( \"2 - A émettre\",\"1 - Qualifiée\",\"3 - Emise\"),WEEK==27) %>% \n      mutate(CA_BT = as.integer(CA_BT__N__KE))      %>%select(STEP,\n                                             OFFRE_PRINCIPALE,\n                                             SECTEUR,SUJET,\n                                             CA_BT\n                                             ) %>% filter(!is.na(CA_BT)) \n   # p2017$Couleur <- 0\n   #  p2017[p2017$STEP==\"1 - Qualifiée\",]$Couleur <- 1\n   #  p2017[p2017$STEP==\"2 - A émettre\",]$Couleur <- 2\n   #  p2017[p2017$STEP==\"3 - Emise\",]$Couleur <- 3\n    \n\n    tm <- treemap(p2017, #Your data frame object\n            index=c(\"STEP\", \"OFFRE_PRINCIPALE\",\"SUJET\"),  #A list of your categorical variables\n            vSize = \"CA_BT\",  #This is your quantitative variable\n            type=\"index\", #Type sets the organization and color scheme of your treemap\n            palette = \"Accent\",  #Select your color palette from the RColorBrewer presets or make your own.\n            title=\"Spending\", #Customize your title\n            fontsize.title = 14 #Change the font size of the title\n    )\n    \n   \n    hc <- hctreemap(tm, allowDrillToNode = TRUE, layoutAlgorithm = \"squarified\") %>% \n      hc_title(text = \"Répartition Pipe\") %>% \n      hc_tooltip(pointFormat = \"SECTEUR: {point.value} <br> cluster: {point.name}\") \n     \n   \n    \n    \n    hc\n  })\n  \n  \n  \n  \n  # Create Sunburst plot\n  output$sunburstPlot <- renderSunburst({ \n\n    p2017 <- pilotage_data  %>% mutate(YEAR=2017) %>%\n      filter(STEP %in% c( \"2 - A émettre\",\"1 - Qualifiée\",\"3 - Emise\"),WEEK==27) %>% \n      mutate(CA_BT = as.integer(CA_BT__N__KE))      %>%select(STEP,\n                                                              OFFRE_PRINCIPALE,\n                                                              SECTEUR,SUJET,\n                                                              CA_BT\n      ) %>% filter(!is.na(CA_BT))\n    p2017$STEP <- gsub(\"-\", \"#\", p2017$STEP)\n    p2017$SUJET <- gsub(\"-\", \"#\", p2017$SUJET)\n      tempDat <-  data.table(A=p2017$STEP, B = p2017$OFFRE_PRINCIPALE, C = p2017$SUJET,D=p2017$CA_BT)\n      tempDat[,c(\"V1\",\"V2\"):= list(paste0(A,\"-\",B, \"-\", C),D)]\n      sunburst(tempDat[,.(V1,V2)], percent = FALSE,count = TRUE)\n    mutate(V1=paste(OFFRE_PRINCIPALE,SUJET,sep=\"-\")) %>%\n      mutate(V2=CA_BT)\n    sunburst(p2017[,.(V1,V2)])\n    \n  })\n})\n",
    "created" : 1501243858562.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3033866007",
    "id" : "6A6FB8A7",
    "lastKnownWriteTime" : 1501260423,
    "last_content_update" : 1501260423927,
    "path" : "D:/tmp/Pipe/server.R",
    "project_path" : "server.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}