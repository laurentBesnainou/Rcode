type="STEP", #Type sets the organization and color scheme of your treemap
palette = "Reds",  #Select your color palette from the RColorBrewer presets or make your own.
title="Spending", #Customize your title
fontsize.title = 14 #Change the font size of the title
)
treemap(p2017, #Your data frame object
index=c("STEP", "OFFRE_PRINCIPALE"),  #A list of your categorical variables
vSize = "CA_BT",  #This is your quantitative variable
type="index", #Type sets the organization and color scheme of your treemap
palette = "Reds",  #Select your color palette from the RColorBrewer presets or make your own.
title="Spending", #Customize your title
fontsize.title = 14 #Change the font size of the title
)
tm <- treemap(p2017, #Your data frame object
index=c("STEP", "OFFRE_PRINCIPALE"),  #A list of your categorical variables
vSize = "CA_BT",  #This is your quantitative variable
type="index", #Type sets the organization and color scheme of your treemap
palette = "Reds",  #Select your color palette from the RColorBrewer presets or make your own.
title="Spending", #Customize your title
fontsize.title = 14 #Change the font size of the title
)
hctreemap(tm, allowDrillToNode = TRUE, layoutAlgorithm = "squarified") %>%
hc_title(text = "Répartition Pipe") %>%
hc_tooltip(pointFormat = "<b>{point.name}</b>:<br>
montant: {point.value:,.0f}<br>
GNI: {point.valuecolor:,.0f}")
p2017 <- pilotage_data  %>% mutate(YEAR=2017) %>%
filter(STEP %in% c("1 - Qualifiée", "2 - A émettre", "3 - Emise"),WEEK==27) %>%
mutate(CA_BT = as.integer(CA_BT__N__KE))      %>%select(STEP,
OFFRE_PRINCIPALE,
SECTEUR,SUJET,
CA_BT
) %>% filter(!is.na(CA_BT))
p2017$Couleur <- 0
p2017[p2017$STEP=="1 - Qualifiée",]$Couleur <- 1
p2017[p2017$STEP=="2 - A émettre",]$Couleur <- 2
p2017[p2017$STEP=="3 - Emise",]$Couleur <- 3
tm <- treemap(p2017, #Your data frame object
index=c("STEP", "OFFRE_PRINCIPALE"),  #A list of your categorical variables
vSize = "CA_BT",  #This is your quantitative variable
type="index", #Type sets the organization and color scheme of your treemap
palette = "Reds",  #Select your color palette from the RColorBrewer presets or make your own.
title="Spending", #Customize your title
fontsize.title = 14 #Change the font size of the title
)
hctreemap(tm, allowDrillToNode = TRUE, layoutAlgorithm = "squarified") %>%
hc_title(text = "Répartition Pipe") %>%
hc_tooltip(pointFormat = "<b>{point.name}</b>:<br>
montant: {point.value:,.0f}<br>
SUJET: {point.SUJET:,.0f}")
p2017 <- pilotage_data  %>% mutate(YEAR=2017) %>%
filter(STEP %in% c("1 - Qualifiée", "2 - A émettre", "3 - Emise"),WEEK==27) %>%
mutate(CA_BT = as.integer(CA_BT__N__KE))      %>%select(STEP,
OFFRE_PRINCIPALE,
SECTEUR,SUJET,
CA_BT
) %>% filter(!is.na(CA_BT))
p2017$Couleur <- 0
p2017[p2017$STEP=="1 - Qualifiée",]$Couleur <- 1
p2017[p2017$STEP=="2 - A émettre",]$Couleur <- 2
p2017[p2017$STEP=="3 - Emise",]$Couleur <- 3
tm <- treemap(p2017, #Your data frame object
index=c("STEP", "SUJET"),  #A list of your categorical variables
vSize = "CA_BT",  #This is your quantitative variable
type="index", #Type sets the organization and color scheme of your treemap
palette = "Reds",  #Select your color palette from the RColorBrewer presets or make your own.
title="Spending", #Customize your title
fontsize.title = 14 #Change the font size of the title
)
hctreemap(tm, allowDrillToNode = TRUE, layoutAlgorithm = "squarified") %>%
hc_title(text = "Répartition Pipe") %>%
hc_tooltip(pointFormat = "<b>{point.name}</b>:<br>
montant: {point.value:,.0f}<br>
SUJET: {point.SUJET:,.0f}")
hctreemap(tm, allowDrillToNode = TRUE, layoutAlgorithm = "squarified") %>%
hc_title(text = "Répartition Pipe") %>%
hc_tooltip(pointFormat = "y: {point.y} <br> group: {point.group} <br> cluster: {point.cluster}")
hctreemap(tm, allowDrillToNode = TRUE, layoutAlgorithm = "squarified") %>%
hc_title(text = "Répartition Pipe") %>%
hc_tooltip(pointFormat = "y: {point.y} <br> group: {point.OFFRE_PRINCIPALE} <br> cluster: {point.cluster}")
hctreemap(tm, allowDrillToNode = TRUE, layoutAlgorithm = "squarified") %>%
hc_title(text = "Répartition Pipe") %>%
hc_tooltip(pointFormat = "y: {point.y} <br> group: {point.secteur} <br> cluster: {point.cluster}")
hctreemap(tm, allowDrillToNode = TRUE, layoutAlgorithm = "squarified") %>%
hc_title(text = "Répartition Pipe") %>%
hc_tooltip(pointFormat = "y: {point.y} <br> SECTEUR: {point.SECTEUR} <br> cluster: {point.cluster}")
p2017 <- pilotage_data  %>% mutate(YEAR=2017) %>%
filter(STEP %in% c("1 - Qualifiée", "2 - A émettre", "3 - Emise"),WEEK==27) %>%
mutate(CA_BT = as.integer(CA_BT__N__KE))      %>%select(STEP,
OFFRE_PRINCIPALE,
SECTEUR,SUJET,
CA_BT
) %>% filter(!is.na(CA_BT))
p2017$Couleur <- 0
p2017[p2017$STEP=="1 - Qualifiée",]$Couleur <- 1
p2017[p2017$STEP=="2 - A émettre",]$Couleur <- 2
p2017[p2017$STEP=="3 - Emise",]$Couleur <- 3
tm <- treemap(p2017, #Your data frame object
index=c("STEP", "SUJET","OFFRE_PRINCIPALE"),  #A list of your categorical variables
vSize = "CA_BT",  #This is your quantitative variable
type="index", #Type sets the organization and color scheme of your treemap
palette = "Reds",  #Select your color palette from the RColorBrewer presets or make your own.
title="Spending", #Customize your title
fontsize.title = 14 #Change the font size of the title
)
hctreemap(tm, allowDrillToNode = TRUE, layoutAlgorithm = "squarified") %>%
hc_title(text = "Répartition Pipe") %>%
hc_tooltip(pointFormat = "y: {point.y} <br> SECTEUR: {point.SECTEUR} <br> cluster: {point.cluster}")
tm <- treemap(p2017, #Your data frame object
index=c("STEP", "OFFRE_PRINCIPALE","SUJET"),  #A list of your categorical variables
vSize = "CA_BT",  #This is your quantitative variable
type="index", #Type sets the organization and color scheme of your treemap
palette = "Reds",  #Select your color palette from the RColorBrewer presets or make your own.
title="Spending", #Customize your title
fontsize.title = 14 #Change the font size of the title
)
tm <- treemap(p2017, #Your data frame object
index=c("STEP", "OFFRE_PRINCIPALE","SUJET"),  #A list of your categorical variables
vSize = "CA_BT",  #This is your quantitative variable
type="index", #Type sets the organization and color scheme of your treemap
palette = "Accents",  #Select your color palette from the RColorBrewer presets or make your own.
title="Spending", #Customize your title
fontsize.title = 14 #Change the font size of the title
)
tm <- treemap(p2017, #Your data frame object
index=c("STEP", "OFFRE_PRINCIPALE","SUJET"),  #A list of your categorical variables
vSize = "CA_BT",  #This is your quantitative variable
type="index", #Type sets the organization and color scheme of your treemap
palette = "Accent",  #Select your color palette from the RColorBrewer presets or make your own.
title="Spending", #Customize your title
fontsize.title = 14 #Change the font size of the title
)
hctreemap(tm, allowDrillToNode = TRUE, layoutAlgorithm = "squarified") %>%
hc_title(text = "Répartition Pipe") %>%
hc_tooltip(pointFormat = "y: {point.y} <br> SECTEUR: {point.SECTEUR} <br> cluster: {point.cluster}")
tm <- treemap(p2017, #Your data frame object
index=c("STEP", "OFFRE_PRINCIPALE","SUJET"),  #A list of your categorical variables
vSize = "CA_BT",  #This is your quantitative variable
type="index", #Type sets the organization and color scheme of your treemap
palette = "Accent",  #Select your color palette from the RColorBrewer presets or make your own.
title="Spending", #Customize your title
fontsize.title = 14 #Change the font size of the title
)
hctreemap(tm, allowDrillToNode = TRUE, layoutAlgorithm = "squarified") %>%
hc_title(text = "Répartition Pipe") %>%
hc_tooltip(pointFormat = "y: {point.y} <br> SECTEUR: {point.value} <br> cluster: {point.name}")
treemap(spending, #Your data frame object
index=c("Agency.Name","Bureau.Name","Account.Name"),  #A list of your categorical variables
vSize = "X2017",  #This is your quantitative variable
type="index", #Type sets the organization and color scheme of your treemap
palette = "Reds",  #Select your color palette from the RColorBrewer presets or make your own.
title="Spending in President Obama's 2017 Budget", #Customize your title
fontsize.title = 14 #Change the font size of the title
)
tm <- treemap(p2017, #Your data frame object
index=c("STEP", "OFFRE_PRINCIPALE","SUJET"),  #A list of your categorical variables
vSize = "CA_BT",  #This is your quantitative variable
type="index", #Type sets the organization and color scheme of your treemap
palette = "Accent",  #Select your color palette from the RColorBrewer presets or make your own.
title="Spending", #Customize your title
fontsize.title = 14 #Change the font size of the title
)
hctreemap(tm, allowDrillToNode = TRUE, layoutAlgorithm = "squarified")
tm
p2017 <- pilotage_data  %>% mutate(YEAR=2017) %>%
filter(STEP %in% c("1 - Qualifiée", "2 - A émettre", "3 - Emise"),WEEK==27) %>%
mutate(CA_BT = as.integer(CA_BT__N__KE))      %>%select(STEP,
OFFRE_PRINCIPALE,
SECTEUR,SUJET,
CA_BT
) %>% filter(!is.na(CA_BT))
p2017$Couleur <- 0
p2017[p2017$STEP=="1 - Qualifiée",]$Couleur <- 1
p2017[p2017$STEP=="2 - A émettre",]$Couleur <- 2
p2017[p2017$STEP=="3 - Emise",]$Couleur <- 3
tm <- treemap(p2017, #Your data frame object
index=c("STEP", "OFFRE_PRINCIPALE"),  #A list of your categorical variables
vSize = "CA_BT",  #This is your quantitative variable
type="index", #Type sets the organization and color scheme of your treemap
palette = "Accent",  #Select your color palette from the RColorBrewer presets or make your own.
title="Spending", #Customize your title
fontsize.title = 14 #Change the font size of the title
)
hctreemap(tm, allowDrillToNode = TRUE, layoutAlgorithm = "squarified") %>%
hc_title(text = "Répartition Pipe") %>%
hc_tooltip(pointFormat = "y: {point.y} <br> SECTEUR: {point.value} <br> cluster: {point.name}")
p2017 % group_by(STEP) %>% summarise(montant =sum(CA_BT,na.rm =TRUE ))
p2017 %>% group_by(STEP) %>% summarise(montant =sum(CA_BT,na.rm =TRUE ))
runApp()
hchart(p2017, "treemap", hcaes(x = STEP, value = CA_BT))
hchart(p2017, "treemap", hcaes(x = sujet, value = CA_BT))
hchart(p2017, "treemap", hcaes(x = sujet, value = CA_BT))
hchart(p2017, "treemap", hcaes(x = SUJET, value = CA_BT))
tm <- treemap(p2017, #Your data frame object
index=c("STEP", "OFFRE_PRINCIPALE","SUJET"),  #A list of your categorical variables
vSize = "CA_BT",  #This is your quantitative variable
type="index", #Type sets the organization and color scheme of your treemap
palette = "Accent",  #Select your color palette from the RColorBrewer presets or make your own.
title="Spending", #Customize your title
fontsize.title = 14 #Change the font size of the title
)
hc <- hctreemap(tm, allowDrillToNode = TRUE, layoutAlgorithm = "squarified") %>%
hc_title(text = "Répartition Pipe") %>%
hc_tooltip(pointFormat = "y: {point.y} <br> SECTEUR: {point.value} <br> cluster: {point.name}")
hc
hc <- hctreemap(tm, allowDrillToNode = TRUE, layoutAlgorithm = "squarified") %>%
hc_title(text = "Répartition Pipe") %>%
hc_tooltip(pointFormat = "SECTEUR: {point.value} <br> cluster: {point.name}")
hc
p2017 <- pilotage_data  %>% mutate(YEAR=2017) %>%
filter(STEP %in% c("3 - Emise"),WEEK==27) %>%
mutate(CA_BT = as.integer(CA_BT__N__KE))      %>%select(STEP,
OFFRE_PRINCIPALE,
SECTEUR,SUJET,
CA_BT
) %>% filter(!is.na(CA_BT))
p2017$Couleur <- 0
p2017[p2017$STEP=="1 - Qualifiée",]$Couleur <- 1
p2017[p2017$STEP=="2 - A émettre",]$Couleur <- 2
p2017[p2017$STEP=="3 - Emise",]$Couleur <- 3
tm <- treemap(p2017, #Your data frame object
index=c("STEP", "OFFRE_PRINCIPALE","SUJET"),  #A list of your categorical variables
vSize = "CA_BT",  #This is your quantitative variable
type="index", #Type sets the organization and color scheme of your treemap
palette = "Accent",  #Select your color palette from the RColorBrewer presets or make your own.
title="Spending", #Customize your title
fontsize.title = 14 #Change the font size of the title
)
hchart(p2017, "treemap", hcaes(x = SUJET, value = CA_BT))
hc <- hctreemap(tm, allowDrillToNode = TRUE, layoutAlgorithm = "squarified") %>%
hc_title(text = "Répartition Pipe") %>%
hc_tooltip(pointFormat = "SECTEUR: {point.value} <br> cluster: {point.name}")
hc <- hctreemap(tm, allowDrillToNode = TRUE, layoutAlgorithm = "squarified") %>%
hc_title(text = "Répartition Pipe") %>%
hc_tooltip(pointFormat = "SECTEUR: {point.value} <br> cluster: {point.name}") %>%
hc_colorAxis(hc, minColor = "#FFFFFF", maxColor = "#434348")
hc
hc <- hctreemap(tm, allowDrillToNode = TRUE, layoutAlgorithm = "squarified") %>%
hc_title(text = "Répartition Pipe") %>%
hc_tooltip(pointFormat = "SECTEUR: {point.value} <br> cluster: {point.name}")  %>%
hc_colorAxis( minColor = "#FFFFFF", maxColor = "#434348")
hc
hc <- hctreemap(tm, allowDrillToNode = TRUE, layoutAlgorithm = "squarified") %>%
hc_title(text = "Répartition Pipe") %>%
hc_tooltip(pointFormat = "SECTEUR: {point.value} <br> cluster: {point.name}")  %>%
hc_colorAxis(dataClasses = dclass)
hc <- hctreemap(tm, allowDrillToNode = TRUE, layoutAlgorithm = "squarified") %>%
hc_title(text = "Répartition Pipe") %>%
hc_tooltip(pointFormat = "SECTEUR: {point.value} <br> cluster: {point.name}")  %>%
hc_colorAxis(dataClasses = OFFRE_
hc
hc <- hctreemap(tm, allowDrillToNode = TRUE, layoutAlgorithm = "squarified") %>%
hc_title(text = "Répartition Pipe") %>%
hc_tooltip(pointFormat = "SECTEUR: {point.value} <br> cluster: {point.name}")  %>%
hc_colorAxis(dataClasses = OFFRE_PRINCIPALE)
tm
hc <- hctreemap(tm, allowDrillToNode = TRUE, layoutAlgorithm = "squarified") %>%
hc_title(text = "Répartition Pipe") %>%
hc_tooltip(pointFormat = "SECTEUR: {point.value} <br> cluster: {point.name}")  %>%
hc_colorAxis(dataClasses = STEP)
tm$tm$STEP
hc <- hctreemap(tm, allowDrillToNode = TRUE, layoutAlgorithm = "squarified") %>%
hc_title(text = "Répartition Pipe") %>%
hc_tooltip(pointFormat = "SECTEUR: {point.value} <br> cluster: {point.name}")  %>%
hc_colorAxis(dataClasses = tm$tm$STEP)
hc
hc <- hctreemap(tm, allowDrillToNode = TRUE, layoutAlgorithm = "squarified") %>%
hc_title(text = "Répartition Pipe") %>%
hc_tooltip(pointFormat = "SECTEUR: {point.value} <br> cluster: {point.name}")  %>%
hc_colorAxis(dataClasses = tm$tm$vSize)
hc
tm
runApp()
p2017 <- pilotage_data  %>% mutate(YEAR=2017) %>%
filter(STEP %in% c("3 - Emise"),WEEK==27) %>%
mutate(CA_BT = as.integer(CA_BT__N__KE))      %>%select(STEP,
OFFRE_PRINCIPALE,
SECTEUR,SUJET,
CA_BT
) %>% filter(!is.na(CA_BT))
p2017$Couleur <- 0
p2017[p2017$STEP=="1 - Qualifiée",]$Couleur <- 1
p2017[p2017$STEP=="2 - A émettre",]$Couleur <- 2
p2017[p2017$STEP=="3 - Emise",]$Couleur <- 3
tm <- treemap(p2017, #Your data frame object
index=c("STEP", "OFFRE_PRINCIPALE","SUJET"),  #A list of your categorical variables
vSize = "CA_BT",  #This is your quantitative variable
type="index", #Type sets the organization and color scheme of your treemap
palette = "Accent",  #Select your color palette from the RColorBrewer presets or make your own.
title="Spending", #Customize your title
fontsize.title = 14 #Change the font size of the title
)
hc <- hctreemap(tm, allowDrillToNode = TRUE, layoutAlgorithm = "squarified") %>%
hc_title(text = "Répartition Pipe") %>%
hc_tooltip(pointFormat = "SECTEUR: {point.value} <br> cluster: {point.name}")
hc
runApp()
library(d3treeR)
install.packages("d3Tree")
library(treemap)
library(d3Tree)
data(business)
business$employees.growth <- business$employees - business$employees.prev
tm <- # Brewer's Red-White-Grey palette reversed with predefined range
treemap(business,
index=c("NACE1", "NACE2"),
vSize="employees",
vColor="employees.growth",
type="value",
palette="-RdGy",
range=c(-30000,30000))
d3tree2( tm, rootname = "World" )
library(treemap)
library(d3treeR)
data(business)
business$employees.growth <-
business$employees - business$employees.prev
business$employees.se <-
abs(business$employees.growth / business$employees.prev) * 1000
# More control over the color palette can be achieved with mapping
tm <- treemap(business,
index=c("NACE1", "NACE2"),
vSize="employees",
stdErr="employees.se",
vColor="employees.growth",
type="value",
palette="RdYlGn",
range=c(-20000,30000),           # this is shown in the legend
mapping=c(-30000, 10000, 40000)) # Rd is mapped to -30k, Yl to 10k, and Gn to 40k
d3tree3( tm, rootname = "Root Name")
library(googleVis)
Tree <- gvisTreeMap(Regions,  idvar="Region", parentvar="Parent",
sizevar="Val", colorvar="Fac")
plot(Tree)
Tree2 <- gvisTreeMap(Regions,  "Region", "Parent", "Val", "Fac",
options=list(width=600, height=500,
fontSize=16,
minColor='#EDF8FB',
midColor='#66C2A4',
maxColor='#006D2C',
headerHeight=20,
fontColor='black',
showScale=TRUE))
plot(Tree2)
runApp()
runApp()
runApp()
p2017 <- pilotage_data  %>% mutate(YEAR=2017) %>%
filter(STEP %in% c("1 - Qualifiée", "2 - A émettre", "3 - Emise"),WEEK==27) %>%
mutate(CA_BT = as.integer(CA_BT__N__KE))      %>%select(STEP,
OFFRE_PRINCIPALE,
SECTEUR,SUJET,
CA_BT
) %>% filter(!is.na(CA_BT))
runApp()
p2017 <- pilotage_data  %>% mutate(YEAR=2017) %>%
filter(STEP %in% c( "2 - A émettre"),WEEK==27) %>%
mutate(CA_BT = as.integer(CA_BT__N__KE))      %>%select(STEP,
OFFRE_PRINCIPALE,
SECTEUR,SUJET,
CA_BT
) %>% filter(!is.na(CA_BT)) %>% mutate(V1=paste(STEP,OFFRE_PRINCIPALE,SUJET,sep="-")) %>%
mutate(V2=CABT)
p2017 <- pilotage_data  %>% mutate(YEAR=2017) %>%
filter(STEP %in% c( "2 - A émettre"),WEEK==27) %>%
mutate(CA_BT = as.integer(CA_BT__N__KE))      %>%select(STEP,
OFFRE_PRINCIPALE,
SECTEUR,SUJET,
CA_BT
) %>% filter(!is.na(CA_BT)) %>% mutate(V1=paste(STEP,OFFRE_PRINCIPALE,SUJET,sep="-")) %>%
mutate(V2=CA_BT)
sunburst(p2017[,.(V1,V2)])
library(sunburstR)
sunburst(p2017[,.(V1,V2)])
p2017 <- pilotage_data  %>% mutate(YEAR=2017) %>%
filter(STEP %in% c( "2 - A émettre"),WEEK==27) %>%
mutate(CA_BT = as.integer(CA_BT__N__KE))      %>%select(STEP,
OFFRE_PRINCIPALE,
SECTEUR,SUJET,
CA_BT
) %>% filter(!is.na(CA_BT)) %>% mutate(V1=paste(OFFRE_PRINCIPALE,SUJET,sep="-")) %>%
mutate(V2=CA_BT)
sunburst(p2017[,.(V1,V2)])
sunburst(p2017[,.(V1,V2)])
p2017 <- pilotage_data  %>% mutate(YEAR=2017) %>%
filter(STEP %in% c( "2 - A émettre"),WEEK==27) %>%
mutate(CA_BT = as.integer(CA_BT__N__KE))      %>%select(STEP,
OFFRE_PRINCIPALE,
SECTEUR,SUJET,
CA_BT
) %>% filter(!is.na(CA_BT))
p2017[p2017$STEP=="1",]$Couleur <- 1
p2017[p2017$STEP=="2",]$Couleur <- 2
p2017[p2017$STEP=="3",]$Couleur <- 3
p2017[,c("V1","V2"):= list(paste0(STEP,"-",OFFRE_PRINCIPALE, "-", SUJET),1)]
p2017[,c("V1","V2"):= list(paste0(STEP,"-",OFFRE_PRINCIPALE, "-", SUJET),1)]
p2017 <- pilotage_data  %>% mutate(YEAR=2017) %>%
filter(STEP %in% c( "2 - A émettre"),WEEK==27) %>%
mutate(CA_BT = as.integer(CA_BT__N__KE))      %>%select(STEP,
OFFRE_PRINCIPALE,
SECTEUR,SUJET,
CA_BT
) %>% filter(!is.na(CA_BT))
View(p2017)
p2017[,c("V1","V2"):= list(paste0(STEP,"-",OFFRE_PRINCIPALE, "-", SUJET),1)]
tb <- data.table(p2017)
p2017 <- pilotage_data  %>% mutate(YEAR=2017) %>%
filter(STEP %in% c( "2 - A émettre"),WEEK==27) %>%
mutate(CA_BT = as.integer(CA_BT__N__KE))      %>%select(STEP,
OFFRE_PRINCIPALE,
SECTEUR,SUJET,
CA_BT
) %>% filter(!is.na(CA_BT))
p2017[p2017$STEP=="1",]$Couleur <- 1
p2017[p2017$STEP=="2",]$Couleur <- 2
p2017[p2017$STEP=="3",]$Couleur <- 3
tempDat <-  data.table(A=p2017$STEP, B = p2017$OFFRE_PRINCIPALE, C = p2017$SUJET)
library(data.table)
p2017 <- pilotage_data  %>% mutate(YEAR=2017) %>%
filter(STEP %in% c( "2 - A émettre"),WEEK==27) %>%
mutate(CA_BT = as.integer(CA_BT__N__KE))      %>%select(STEP,
OFFRE_PRINCIPALE,
SECTEUR,SUJET,
CA_BT
) %>% filter(!is.na(CA_BT))
p2017[p2017$STEP=="1",]$Couleur <- 1
p2017[p2017$STEP=="2",]$Couleur <- 2
p2017[p2017$STEP=="3",]$Couleur <- 3
tempDat <-  data.table(A=p2017$STEP, B = p2017$OFFRE_PRINCIPALE, C = p2017$SUJET)
View(tempDat)
tempDat[,c("V1","V2"):= list(paste0(A,"-",B, "-", C),1)]
sunburst(tempDat[,.(V1,V2)])
p2017 <- pilotage_data  %>% mutate(YEAR=2017) %>%
filter(STEP %in% c( "2 - A émettre","1 - Qualifiée","3 - Emise"),WEEK==27) %>%
mutate(CA_BT = as.integer(CA_BT__N__KE))      %>%select(STEP,
OFFRE_PRINCIPALE,
SECTEUR,SUJET,
CA_BT
) %>% filter(!is.na(CA_BT))
p2017[p2017$STEP=="1",]$Couleur <- 1
p2017[p2017$STEP=="2",]$Couleur <- 2
p2017[p2017$STEP=="3",]$Couleur <- 3
tempDat <-  data.table(A=p2017$STEP, B = p2017$OFFRE_PRINCIPALE, C = p2017$SUJET)
tempDat[,c("V1","V2"):= list(paste0(A,"-",B, "-", C),1)]
sunburst(tempDat[,.(V1,V2)])
View(tempDat)
p2017 <- pilotage_data  %>% mutate(YEAR=2017) %>%
filter(STEP %in% c( "2 - A émettre","1 - Qualifiée","3 - Emise"),WEEK==27) %>%
mutate(CA_BT = as.integer(CA_BT__N__KE))      %>%select(STEP,
OFFRE_PRINCIPALE,
SECTEUR,SUJET,
CA_BT
) %>% filter(!is.na(CA_BT))
p2017[p2017$STEP=="1",]$Couleur <- 1
p2017[p2017$STEP=="2",]$Couleur <- 2
p2017[p2017$STEP=="3",]$Couleur <- 3
tempDat <-  data.table(A=p2017$STEP, B = p2017$OFFRE_PRINCIPALE, C = p2017$SUJET,D=p2017$CA_BT)
tempDat[,c("V1","V2"):= list(paste0(A,"-",B, "-", C),D)]
p2017 <- pilotage_data  %>% mutate(YEAR=2017) %>%
filter(STEP %in% c( "2 - A émettre","1 - Qualifiée","3 - Emise"),WEEK==27) %>%
mutate(CA_BT = as.integer(CA_BT__N__KE))      %>%select(STEP,
OFFRE_PRINCIPALE,
SECTEUR,SUJET,
CA_BT
) %>% filter(!is.na(CA_BT))
tempDat <-  data.table(A=p2017$STEP, B = p2017$OFFRE_PRINCIPALE, C = p2017$SUJET,D=p2017$CA_BT)
tempDat[,c("V1","V2"):= list(paste0(A,"-",B, "-", C),D)]
sunburst(tempDat[,.(V1,V2)])
View(p2017)
p2017 <- pilotage_data  %>% mutate(YEAR=2017) %>%
filter(STEP %in% c( "2 - A émettre","1 - Qualifiée","3 - Emise"),WEEK==27) %>%
mutate(CA_BT = as.integer(CA_BT__N__KE))      %>%select(STEP,
OFFRE_PRINCIPALE,
SECTEUR,SUJET,
CA_BT
) %>% filter(!is.na(CA_BT))
group$STEP <- gsub("-", "#", group$STEP)
tempDat <-  data.table(A=p2017$STEP, B = p2017$OFFRE_PRINCIPALE, C = p2017$SUJET,D=p2017$CA_BT)
tempDat[,c("V1","V2"):= list(paste0(A,"-",B, "-", C),D)]
sunburst(tempDat[,.(V1,V2)])
View(tempDat)
gsub("-", "#", group$STEP)
gsub("-", "#", p2017$STEP)
p2017 <- pilotage_data  %>% mutate(YEAR=2017) %>%
filter(STEP %in% c( "2 - A émettre","1 - Qualifiée","3 - Emise"),WEEK==27) %>%
mutate(CA_BT = as.integer(CA_BT__N__KE))      %>%select(STEP,
OFFRE_PRINCIPALE,
SECTEUR,SUJET,
CA_BT
) %>% filter(!is.na(CA_BT))
p2017$STEP <- gsub("-", "#", p2017$STEP)
tempDat <-  data.table(A=p2017$STEP, B = p2017$OFFRE_PRINCIPALE, C = p2017$SUJET,D=p2017$CA_BT)
tempDat[,c("V1","V2"):= list(paste0(A,"-",B, "-", C),D)]
sunburst(tempDat[,.(V1,V2)])
p2017 <- pilotage_data  %>% mutate(YEAR=2017) %>%
filter(STEP %in% c( "2 - A émettre","1 - Qualifiée","3 - Emise"),WEEK==27) %>%
mutate(CA_BT = as.integer(CA_BT__N__KE))      %>%select(STEP,
OFFRE_PRINCIPALE,
SECTEUR,SUJET,
CA_BT
) %>% filter(!is.na(CA_BT))
p2017$STEP <- gsub("-", "#", p2017$STEP)
p2017$SUJET <- gsub("-", "#", p2017$SUJET)
tempDat <-  data.table(A=p2017$STEP, B = p2017$OFFRE_PRINCIPALE, C = p2017$SUJET,D=p2017$CA_BT)
tempDat[,c("V1","V2"):= list(paste0(A,"-",B, "-", C),D)]
sunburst(tempDat[,.(V1,V2)])
sunburst(tempDat[,.(V1,V2)], percent = FALSE)
sunburst((data = tempDat[,.(V1,V2)], percent = FALSE,count = TRUE)
sunburst(data = tempDat[,.(V1,V2)], percent = FALSE,count = TRUE, tooltipOptions = list(showAbsolutePercent = T, showRelativePercent = T))
sunburst(data = tempDat[,.(V1,V2)], percent = FALSE,count = TRUE)
sunburst(data = tempDat[,.(V1,V2)], percent = FALSE,count = TRUE)
sunburst(tempDat[,.(V1,V2)], percent = FALSE,count = TRUE)
