mat <- matrix(0, nrow = 52, ncol = 5)
rownames(mat) = unique(from)
colnames(mat) = unique(to)
from <- paste(c("ESCARGUEL","GRANDJEAN","MOREL","REISSE","SOYER"),sep = ",")
to <- paste(paste("ID",seq(1:52),sep = ""),sep = ",")
mat <- matrix(0, nrow = length(unique(from)), ncol = length(unique(to)))
rownames(mat) = unique(from)
colnames(mat) = unique(to)
mat
for(i in seq(1:52) ) {
mat[i, from[1]]  <- sample(c(1,0),1)
mat[i, from[2]]  <- sample(c(1,0),1)
mat[i, from[3]]  <- sample(c(1,0),1)
mat[i, from[4]]  <- sample(c(1,0),1)
mat[i, from[5]]  <- sample(c(1,0),1)
}
for(i in seq(1:52) ) {
mat[i, from[1]]  <- sample(c(1,0),1)
mat[i, from[2]]  <- sample(c(1,0),1)
mat[i, from[3]]  <- sample(c(1,0),1)
mat[i, from[4]]  <- sample(c(1,0),1)
mat[i, from[5]]  <- sample(c(1,0),1)
}
mat[from[i], to[i]]
for(i in seq(1:52) ) {
mat[from[i], to[1]]  <- sample(c(1,0),1)
mat[from[i], from[2]]  <- sample(c(1,0),1)
mat[from[i], from[3]]  <- sample(c(1,0),1)
mat[from[i], from[4]]  <- sample(c(1,0),1)
mat[from[i], from[5]]  <- sample(c(1,0),1)
}
mat[from[1], to[1]]
mat[from[1], to[2]]
mat[from[52], to[2]]
mat
to <- paste(c("ESCARGUEL","GRANDJEAN","MOREL","REISSE","SOYER"),sep = ",")
from <- paste(paste("ID",seq(1:52),sep = ""),sep = ",")
mat <- matrix(0, nrow = length(unique(from)), ncol = length(unique(to)))
rownames(mat) = unique(from)
colnames(mat) = unique(to)
mat[from[52], to[2]]
to <- paste(c("ESCARGUEL","GRANDJEAN","MOREL","REISSE","SOYER"),sep = ",")
from <- paste(paste("ID",seq(1:52),sep = ""),sep = ",")
mat <- matrix(0, nrow = length(unique(from)), ncol = length(unique(to)))
rownames(mat) = unique(from)
colnames(mat) = unique(to)
mat[from[i], to[i]]
for(i in seq(1:52) ) {
mat[from[i], to[1]]  <- sample(c(1,0),1)
mat[from[i], from[2]]  <- sample(c(1,0),1)
mat[from[i], from[3]]  <- sample(c(1,0),1)
mat[from[i], from[4]]  <- sample(c(1,0),1)
mat[from[i], from[5]]  <- sample(c(1,0),1)
}
for(i in seq(1:52) ) {
print i
mat[from[i], to[1]]  <- sample(c(1,0),1)
mat[from[i], from[2]]  <- sample(c(1,0),1)
mat[from[i], from[3]]  <- sample(c(1,0),1)
mat[from[i], from[4]]  <- sample(c(1,0),1)
mat[from[i], from[5]]  <- sample(c(1,0),1)
}
seq(1:52)
mat[from[5], to[2]]
mat[from[6], to[2]]
mat[from[0], to[2]]
mat[from[51]], to[2]]
mat[from[50]], to[2]]
mat[from[10]], to[2]]
mat[from[6]], to[2]]
mat[from[5]], to[2]]
from[51]
mat["ID51,"]
mat["ID1,"]
mat["ID1",]
mat["ID51",]
mat["ID52",]
for(i in from ) {
print i
mat[i, to[1]]  <- sample(c(1,0),1)
mat[i, from[2]]  <- sample(c(1,0),1)
mat[i, from[3]]  <- sample(c(1,0),1)
mat[i, from[4]]  <- sample(c(1,0),1)
mat[i, from[5]]  <- sample(c(1,0),1)
}
for(i in from ) {
print i
# mat[i, to[1]]  <- sample(c(1,0),1)
# mat[i, from[2]]  <- sample(c(1,0),1)
# mat[i, from[3]]  <- sample(c(1,0),1)
# mat[i, from[4]]  <- sample(c(1,0),1)
# mat[i, from[5]]  <- sample(c(1,0),1)
}
for(i in from ) {
print i }
for(i in 1:10) {
print(i)
}
for(i in from ) {
print (i) }
for(i in from ) {
print (i)
mat[i, to[1]]  <- sample(c(1,0),1)
mat[i, from[2]]  <- sample(c(1,0),1)
mat[i, from[3]]  <- sample(c(1,0),1)
mat[i, from[4]]  <- sample(c(1,0),1)
mat[i, from[5]]  <- sample(c(1,0),1)
}
for(i in from ) {
print (i)
mat[i, to[1]]  <- sample(c(1,0),1)
mat[i, to[2]]  <- sample(c(1,0),1)
mat[i, to[3]]  <- sample(c(1,0),1)
mat[i, to[4]]  <- sample(c(1,0),1)
mat[i, to[5]]  <- sample(c(1,0),1)
}
par("mar")
par(mar = c(1, 1, 1, 1))
chordDiagram(mat, order =sort(union(from, to)), directional = TRUE)
circos.clear()
mat
par(mar = c(1, 1, 1, 1))
chordDiagram(mat, order =sort(union(from, to)), directional = TRUE)
circos.clear()
str(mat)
df = read.table(textConnection("
Brand_from model_from Brand_to Model_to
VOLVO        s80      BMW  5series
BMW    3series      BMW  3series
VOLVO        s60    VOLVO      s60
VOLVO        s60    VOLVO      s80
BMW    3series     AUDI       s4
AUDI         a4      BMW  3series
AUDI         a5     AUDI       a5
"), header = TRUE, stringsAsFactors = FALSE)
from = c("ESCARGUEL","GRANDJEAN","MOREL","REISSE","SOYER")
to = paste(df[[3]], df[[4]], sep = ",")
mat = matrix(0, nrow = length(unique(from)), ncol = length(unique(to)))
str(mat)
rownames(mat) = unique(from)
colnames(mat) = unique(to)
for(i in seq_along(from)) mat[from[i], to[i]] = 3
par(mar = c(1, 1, 1, 1))
chordDiagram(mat, order = sort(union(from, to)), directional = TRUE)
circos.clear()
# Upload library
library(circlize)
# Create data
df = read.table(textConnection("
Brand_from model_from Brand_to Model_to
VOLVO        s80      BMW  5series
BMW    3series      BMW  3series
VOLVO        s60    VOLVO      s60
VOLVO        s60    VOLVO      s80
BMW    3series     AUDI       s4
AUDI         a4      BMW  3series
AUDI         a5     AUDI       a5
"), header = TRUE, stringsAsFactors = FALSE)
from = paste(df[[1]], df[[2]], sep = ",")
to = paste(df[[3]], df[[4]], sep = ",")
mat = matrix(0, nrow = length(unique(from)), ncol = length(unique(to)))
rownames(mat) = unique(from)
colnames(mat) = unique(to)
for(i in seq_along(from)) mat[from[i], to[i]] = 3
par(mar = c(1, 1, 1, 1))
chordDiagram(mat, order = sort(union(from, to)), directional = TRUE)
circos.clear()
str(mat)
#On constitue la matrice des connaissancess
to <- paste(c("ESCARGUEL","GRANDJEAN","MOREL","REISSE","SOYER"),sep = ",")
from <- paste(paste("ID",seq(1:52),sep = ""),sep = ",")
mat <- matrix(0, nrow = length(unique(from)), ncol = length(unique(to)))
rownames(mat) = unique(from)
colnames(mat) = unique(to)
str(mat)
for(i in from ) {
print (i)
mat[i, to[1]]  <- sample(c(1,0),1)
mat[i, to[2]]  <- sample(c(1,0),1)
mat[i, to[3]]  <- sample(c(1,0),1)
mat[i, to[4]]  <- sample(c(1,0),1)
mat[i, to[5]]  <- sample(c(1,0),1)
}
par(mar = c(1, 1, 1, 1))
chordDiagram(mat, order =sort(union(from, to)), directional = TRUE)
circos.clear()
par(mar = c(1, 1, 1, 1))
chordDiagram(mat,  directional = TRUE)
circos.clear()
set.seed(123)
mat = matrix(sample(1:100, 18, replace = TRUE), 3, 6)
rownames(mat) = letters[1:3]
colnames(mat) = LETTERS[1:6]
mat
### colors settings
rand_color = function(n, alpha = 1) {
return(rgb(runif(n), runif(n), runif(n), alpha = alpha))
}
par(mfrow = c(3, 3))
par(mar = c(1, 1, 1, 1))
par(mfrow = c(3, 3))
par(mar = c(1, 1, 1, 1))
grid.col = NULL
grid.col[letters[1:3]] = c("red", "green", "blue")
grid.col[LETTERS[1:6]] = "grey"
chordDiagram(mat, grid.col = grid.col)
chordDiagram(mat, grid.col = grid.col, transparency = 0.5)
col_mat = rand_color(length(mat), alpha = 0.5)
dim(col_mat) = dim(mat)
par(mfrow = c(3, 3))
par(mar = c(1, 1, 1, 1))
grid.col = NULL
grid.col[letters[1:3]] = c("red", "green", "blue")
grid.col[LETTERS[1:6]] = "grey"
chordDiagram(mat, grid.col = grid.col)
#On constitue la matrice des connaissancess
to <- paste(c("ESCARGUEL","GRANDJEAN","MOREL","REISSE","SOYER"),sep = ",")
from <- paste(paste("ID",seq(1:52),sep = ""),sep = ",")
mat <- matrix(0, nrow = length(unique(from)), ncol = length(unique(to)))
rownames(mat) = unique(from)
colnames(mat) = unique(to)
for(i in from ) {
print (i)
mat[i, to[1]]  <- sample(c(1,0),1)
mat[i, to[2]]  <- sample(c(1,0),1)
mat[i, to[3]]  <- sample(c(1,0),1)
mat[i, to[4]]  <- sample(c(1,0),1)
mat[i, to[5]]  <- sample(c(1,0),1)
}
par(mar = c(1, 1, 1, 1))
chordDiagram(mat,  directional = TRUE)
circos.clear()
#On constitue la matrice des connaissancess
to <- paste(c("ESCARGUEL","GRANDJEAN","MOREL","REISSE","SOYER"),sep = ",")
from <- paste(paste("ID",seq(1:52),sep = ""),sep = ",")
mat <- matrix(0, nrow = length(unique(from)), ncol = length(unique(to)))
rownames(mat) = unique(from)
colnames(mat) = unique(to)
for(i in from ) {
print (i)
mat[i, to[1]]  <- sample(c(1,0),1)
mat[i, to[2]]  <- sample(c(1,0),1)
mat[i, to[3]]  <- sample(c(1,0),1)
mat[i, to[4]]  <- sample(c(1,0),1)
mat[i, to[5]]  <- sample(c(1,0),1)
}
par(mar = c(1, 1, 1, 1))
chordDiagram(mat,  directional = TRUE)
circos.clear()
rm(list=ls())
# Upload library
library(circlize)
#On constitue la matrice des connaissancess
to <- paste(c("ESCARGUEL","GRANDJEAN","MOREL","REISSE","SOYER"),sep = ",")
from <- paste(paste("ID",seq(1:52),sep = ""),sep = ",")
mat <- matrix(0, nrow = length(unique(from)), ncol = length(unique(to)))
rownames(mat) = unique(from)
colnames(mat) = unique(to)
for(i in from ) {
print (i)
mat[i, to[1]]  <- sample(c(1,0),1)
mat[i, to[2]]  <- sample(c(1,0),1)
mat[i, to[3]]  <- sample(c(1,0),1)
mat[i, to[4]]  <- sample(c(1,0),1)
mat[i, to[5]]  <- sample(c(1,0),1)
}
par(mar = c(1, 1, 1, 1))
chordDiagram(mat,  directional = TRUE)
circos.clear()
?chordDiagram
shiny::runApp('D:/tmp/pr_appNew')
runApp('D:/tmp/pr_appNew')
runApp('D:/tmp/pr_appNew')
runApp('D:/tmp/pr_appNew')
#On constitue la matrice des connaissancess
to <- paste(c("ESCARGUEL","GRANDJEAN","MOREL","REISSE","SOYER"),sep = ",")
from <- paste(paste("ID",seq(1:52),sep = ""),sep = ",")
mat <- matrix(0, nrow = length(unique(from)), ncol = length(unique(to)))
rownames(mat) = unique(from)
colnames(mat) = unique(to)
for(i in from ) {
print (i)
mat[i, to[1]]  <- sample(c(1,0),1)
mat[i, to[2]]  <- sample(c(1,0),1)
mat[i, to[3]]  <- sample(c(1,0),1)
mat[i, to[4]]  <- sample(c(1,0),1)
mat[i, to[5]]  <- sample(c(1,0),1)
}
par(mar = c(1, 1, 1, 1))
chordDiagram(mat,  directional = TRUE)
highlight.sector(sector.index = c("ID22"), track.index = 1)
circos.clear()
to <- paste(c("ESCARGUEL","GRANDJEAN","MOREL","REISSE","SOYER"),sep = ",")
from <- paste(paste("ID",seq(1:52),sep = ""),sep = ",")
mat <- matrix(0, nrow = length(unique(from)), ncol = length(unique(to)))
rownames(mat) = unique(from)
colnames(mat) = unique(to)
for(i in from ) {
print (i)
mat[i, to[1]]  <- sample(c(1,0),1)
mat[i, to[2]]  <- sample(c(1,0),1)
mat[i, to[3]]  <- sample(c(1,0),1)
mat[i, to[4]]  <- sample(c(1,0),1)
mat[i, to[5]]  <- sample(c(1,0),1)
}
par(mar = c(1, 1, 1, 1))
chordDiagram(mat,  directional = TRUE)
highlight.sector(sector.index = c("ID22"), track.index = 3,col =c( "red"))
circos.clear()
par(mar = c(1, 1, 1, 1))
chordDiagram(mat,  directional = TRUE)
highlight.sector(sector.index = c("ID22"), col =c( "red"))
circos.clear()
par(mar = c(1, 1, 1, 1))
chordDiagram(mat,  directional = TRUE)
#highlight.sector(sector.index = c("ID22"), col =c( "red"))
highlight.sector(c("ID22", "ID2"), track.index = 1)
par(mar = c(1, 1, 1, 1))
chordDiagram(mat,  directional = TRUE)
#highlight.sector(sector.index = c("ID22"), col =c( "red"))
#highlight.sector(c("ID22", "ID2"), track.index = 1)
highlight.sector("c", col = "#00FF0040")
par(mar = c(1, 1, 1, 1))
chordDiagram(mat,  directional = TRUE)
#highlight.sector(sector.index = c("ID22"), col =c( "red"))
#highlight.sector(c("ID22", "ID2"), track.index = 1)
highlight.sector("ID10", col = "#00FF0040")
par(mar = c(1, 1, 1, 1))
chordDiagram(mat,  directional = TRUE)
#highlight.sector(sector.index = c("ID22"), col =c( "red"))
#highlight.sector(c("ID22", "ID2"), track.index = 1)
#highlight.sector("ID10", col = "#00FF0040")
highlight.sector("ID10", col = NA, border = "red", lwd = 2)
par(mar = c(1, 1, 1, 1))
chordDiagram(mat,  directional = TRUE)
#highlight.sector(sector.index = c("ID22"), col =c( "red"))
#highlight.sector(c("ID22", "ID2"), track.index = 1)
#highlight.sector("ID10", col = "#00FF0040")
#highlight.sector("ID10", col = NA, border = "red", lwd = 2)
highlight.sector("ID10", col = "#0000FF40", track.index = c(2, 3))
par(mar = c(1, 1, 1, 1))
chordDiagram(mat,  directional = TRUE)
#highlight.sector(sector.index = c("ID22"), col =c( "red"))
#highlight.sector(c("ID22", "ID2"), track.index = 1)
#highlight.sector("ID10", col = "#00FF0040")
#highlight.sector("ID10", col = NA, border = "red", lwd = 2)
highlight.sector("ID10", col = "#0000FF40", track.index = c(0, 1))
runApp('D:/tmp/pr_appNew')
runApp('D:/tmp/pr_appNew')
rand_color(52)
matrix(rand_color(9), 3)
matrix(rand_color(9), 3)
rand_color(9)
matrix(rand_color(9), 3)
to <- paste(c("ESCARGUEL","GRANDJEAN","MOREL","REISSE","SOYER"),sep = ",")
from <- paste(seq(1:52),sep = ",")
mat <- matrix(0, nrow = length(unique(from)), ncol = length(unique(to)))
col <- matrix(0, nrow = length(unique(from)), ncol = length(unique(to)))
rownames(mat) = unique(from)
colnames(mat) = unique(to)
View(col)
View(col)
View(col)
col
col[,1]
to["1"]
from["1"]
from
getINDEX( from, value = "2" )
which(from == 200)
which(from == "20")
runApp('D:/tmp/pr_appNew')
runApp('D:/tmp/pr_appNew')
#On constitue la matrice des connaissancess
to <- paste(c("ESCARGUEL","GRANDJEAN","MOREL","REISSE","SOYER"),sep = ",")
from <- paste(seq(1:52),sep = ",")
mat <- matrix(0, nrow = length(unique(from)), ncol = length(unique(to)))
col <- matrix(0, nrow = length(unique(from)), ncol = length(unique(to)))
col[,1] <- "#1CB217FF"
col[,2] <- "#DA8B1BFF"
col[,3] <- "#813A72FF"
col[,4] <- "#629177FF"
col[,5] <- "#25DC66FF"
rownames(mat) = unique(from)
colnames(mat) = unique(to)
for(i in from ) {
if (input$consultant_id == i) {
mat[i, to[1]]  <- sample(c(1,0),1)
mat[i, to[2]]  <- sample(c(1,0),1)
mat[i, to[3]]  <- sample(c(1,0),1)
mat[i, to[4]]  <- sample(c(1,0),1)
mat[i, to[5]]  <- sample(c(1,0),1)
} else {
col[which(from == i), 1] = "#FFFFFF00"
col[which(from == i), 2] = "#FFFFFF00"
col[which(from == i), 3] = "#FFFFFF00"
col[which(from == i), 4] = "#FFFFFF00"
col[which(from == i), 5] = "#FFFFFF00"
mat[i, to[1]]  <- 1
mat[i, to[2]]  <- 1
mat[i, to[3]]  <- 1
mat[i, to[4]]  <- 1
mat[i, to[5]]  <- 1
}
}
par(mar = c(1, 1, 1, 1))
chordDiagram(mat,  directional = TRUE)
#On constitue la matrice des connaissancess
to <- paste(c("ESCARGUEL","GRANDJEAN","MOREL","REISSE","SOYER"),sep = ",")
from <- paste(seq(1:52),sep = ",")
mat <- matrix(0, nrow = length(unique(from)), ncol = length(unique(to)))
col <- matrix(0, nrow = length(unique(from)), ncol = length(unique(to)))
col[,1] <- "#1CB217FF"
col[,2] <- "#DA8B1BFF"
col[,3] <- "#813A72FF"
col[,4] <- "#629177FF"
col[,5] <- "#25DC66FF"
rownames(mat) = unique(from)
colnames(mat) = unique(to)
for(i in from ) {
if (input$consultant_id == i) {
mat[i, to[1]]  <- sample(c(1,0),1)
mat[i, to[2]]  <- sample(c(1,0),1)
mat[i, to[3]]  <- sample(c(1,0),1)
mat[i, to[4]]  <- sample(c(1,0),1)
mat[i, to[5]]  <- sample(c(1,0),1)
} else {
col[which(from == i), 1] = "#FFFFFF00"
col[which(from == i), 2] = "#FFFFFF00"
col[which(from == i), 3] = "#FFFFFF00"
col[which(from == i), 4] = "#FFFFFF00"
col[which(from == i), 5] = "#FFFFFF00"
mat[i, to[1]]  <- 1
mat[i, to[2]]  <- 1
mat[i, to[3]]  <- 1
mat[i, to[4]]  <- 1
mat[i, to[5]]  <- 1
}
}
for(i in from ) {
if ("3" == i) {
mat[i, to[1]]  <- sample(c(1,0),1)
mat[i, to[2]]  <- sample(c(1,0),1)
mat[i, to[3]]  <- sample(c(1,0),1)
mat[i, to[4]]  <- sample(c(1,0),1)
mat[i, to[5]]  <- sample(c(1,0),1)
} else {
col[which(from == i), 1] = "#FFFFFF00"
col[which(from == i), 2] = "#FFFFFF00"
col[which(from == i), 3] = "#FFFFFF00"
col[which(from == i), 4] = "#FFFFFF00"
col[which(from == i), 5] = "#FFFFFF00"
mat[i, to[1]]  <- 1
mat[i, to[2]]  <- 1
mat[i, to[3]]  <- 1
mat[i, to[4]]  <- 1
mat[i, to[5]]  <- 1
}
}
par(mar = c(1, 1, 1, 1))
chordDiagram(mat,  directional = TRUE)
chordDiagram(mat,  directional = TRUE, col=col)
load("data/questionnaire_associe.RData")
setwd("D:/tmp/pr_appNew")
load("data/questionnaire_associe.RData")
q1_str <- "Pour quelle personne ci-dessous considÃ¨res-tu que ton avis n'est pas pertinent ?"
q2_str <- "Dans quelle mesure considÃ¨res-tu que les associÃ©s suivants incarnent la valeur de leadership ?"
q3_str <- "Dans quelle mesure considÃ¨res-tu que les associÃ©s suivants sont porteurs de vision ?"
q4_str <- "Dans quelle mesure considÃ¨res-tu que les associÃ©s suivants incarnent un savoir-faire et savoir-Ãªtre permettant l'origination commerciale ?"
q5_str <- "Dans quelle mesure considÃ¨res-tu que les associÃ©s suivants incarnent un savoir-faire et savoir-Ãªtre permettant le dÃ©veloppement des collaborateurs ?"
questionnaire_connaissance <- questionnaire_associe %>%
filter(Question == q1_str)
View(questionnaire_connaissance)
View(questionnaire_connaissance)
load("data/questionnaire_associe.RData")
q1_str <- "Pour quelle personne ci-dessous considères-tu que ton avis n'est pas pertinent ?"
q2_str <- "Dans quelle mesure considères-tu que les associés suivants incarnent la valeur de leadership ?"
q3_str <- "Dans quelle mesure considères-tu que les associés suivants sont porteurs de vision ?"
q4_str <- "Dans quelle mesure considères-tu que les associés suivants incarnent un savoir-faire et savoir-Ãªtre permettant l'origination commerciale ?"
q5_str <- "Dans quelle mesure considères-tu que les associés suivants incarnent un savoir-faire et savoir-Ãªtre permettant le développement des collaborateurs ?"
questionnaire_associe <- questionnaire_associe %>%
mutate(Associe = str_trim(Associe)) %>%
mutate(response = ifelse(Question == q1_str,
ifelse(is.na(response), "Je connais", "Je ne connais pas"),
response))
questionnaire_connaissance <- questionnaire_associe %>%
filter(Question == q1_str)
questionnaire_qualites <- questionnaire_associe %>%
filter(Question %in% c(q2_str, q3_str, q4_str, q5_str))
questionnaire_qualites <- questionnaire_qualites %>%
mutate(qualite = recode(Question,
"Dans quelle mesure considères-tu que les associés suivants incarnent la valeur de leadership ?" = "LEADERSHIP",
"Dans quelle mesure considères-tu que les associés suivants sont porteurs de vision ?" = "VISION",
"Dans quelle mesure considères-tu que les associés suivants incarnent un savoir-faire et savoir-Ãªtre permettant l'origination commerciale ?" = "ORIGINATION\nCOMMERCIALE",
"Dans quelle mesure considères-tu que les associés suivants incarnent un savoir-faire et savoir-Ãªtre permettant le développement des collaborateurs ?" = "DEVELOPPEMENT\nDES\nCOLLABORATEURS"))
questionnaire_qualites <- questionnaire_qualites %>%
mutate(score = recode(response,
"Content" = 3,
"Neutre" = 2,
"Mécontent" = 0,
.missing = 0))
View(questionnaire_connaissance)
View(questionnaire_connaissance)
View(questionnaire_connaissance)
View(questionnaire_connaissance)
View(questionnaire_connaissance)
questionnaire_connaissance
load("data/questionnaire_associe.RData")
View(questionnaire_associe)
View(questionnaire_associe)
View(questionnaire_associe)
View(questionnaire_associe)
