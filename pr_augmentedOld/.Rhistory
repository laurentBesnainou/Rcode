library(dplyr)
library(stringr)
#PR2017 - PERF2016 - M_Datalab.xls
data_consultant <- read_excel("PR2017 - PERF2016 - C_Datalab.xls", col_names = FALSE)
nbr_cols <- ncol(data_consultant)
nbr_rows <- nrow(data_consultant)
remove_html <- function(str_vec) {
str_trim(str_replace_all(data_consultant[[i]], "<.*?>", ""))
}
remove_html_str <- function(str_vec) {
str_trim(str_replace_all(str_vec, "<.*?>", ""))
}
respondant_ids <- data_consultant[-1,][[6]] %>% as.numeric()
# On recupere le nom des managers de la premiere question
for (i in 10:41) {
if (is.character(data_consultant[[i]])) {
data_consultant[[i]] <- remove_html(data_consultant[[i]])
}
}
# on supprime les colonnes vides
null_cols <- vector()
for (i in seq_len(nbr_cols)) {
if (sum(is.na(data_consultant[[i]]))/(nbr_rows - 1) == 1) {
null_cols <- c(null_cols, i)
}
}
#n supprime les lignes vides
data_consultant[null_cols] <- NULL
#Les 2 premieres lignes contiennent le nom des colonnes a reconmposer
col_fields <- data_consultant[c(1, 2),]
#les données commencent à partir de la ligne 3
true_data <- data_consultant[-c(1, 2),]
#les questions sont en ligne 1
question_rows <- data_consultant[1, ]
#les personnes associées aux questions sont en ligne 2
name_rows <- data_consultant[2, ]
#Liste des questions posées Managers
q1_str <- "Pour quelle personne ci-dessous considères-tu que ton avis n'est pas pertinent ?"
q2_str <- "Dans quelle mesure considères-tu que les personnes suivantes pensent Business Technology ?"
q3_str <- "Dans quelle mesure considères-tu que les personnes suivants pensent différemment ?"
q4_str <- "Dans quelle mesure considères-tu que les personnes suivantes contribuent à l'intelligence connective ?"
q5_str <- "Dans quelle mesure considères-tu que les personnes suivantes savent tirer profit de la diversité créatrice de valeur ?"
#on supprime les 5 premieres colonnes
irrelevant_cols <- 1:5
data_consultant[irrelevant_cols] <- NULL
colnames(data_consultant) <- 1:ncol(data_consultant)
#Position des questions dans le fichier Excel +21
q1_cols <- 2:33
q2_cols <- 34:65
q3_cols <- 66:97
q4_cols <- 98:129
q5_cols <- 130:161
q2_5 <- 34:161
#Fonction qui permet de récupèrer le nom du manager sur la Q1
for (i in q1_cols) {
data_consultant[1, i] <- q1_str
data_consultant[2, i] <- str_trim(str_split(data_consultant[2, i], " - ")[[1]][1])
}
#fonction qui enleve le HTML sur les questions 2 à 5
for (i in q2_5) {
data_consultant[1, i] <- remove_html_str(data_consultant[1, i])
data_consultant[2, i] <- remove_html_str(data_consultant[2, i])
}
#Rappel de la questions sur la ligne 1
for (i in q2_cols) {
data_consultant[1, i] <- q2_str
}
for (i in q3_cols) {
data_consultant[1, i] <- q3_str
}
for (i in q4_cols) {
data_consultant[1, i] <- q4_str
}
for (i in q5_cols) {
data_consultant[1, i] <- q5_str
}
#On remplace sur les colonnes 2 à 5 le HTML par Content Mécotent Neutre
for (i in q2_5) {
data_consultant[[i]][-c(1,2)] <- ifelse(str_detect(data_consultant[[i]][-c(1,2)], "Content"), "Content",
ifelse(str_detect(data_consultant[[i]][-c(1,2)], "Mécontent"),
"Mécontent", "Neutre"))
}
#On fusionne sur la ligne 1 la question avec le nom de l'associé
for (i in q1_cols) {
data_consultant[1, i] <- str_c(data_consultant[2, i], data_consultant[1, i],  sep = " - ")
}
#on fusionne également sur les autres questions
for (i in q2_5) {
data_consultant[1, i] <- str_c(data_consultant[2, i],data_consultant[1, i] , sep = " - ")
}
#on supprime la ligne 2
data_consultant <- data_consultant[-2, ]
#on initialise le nom des colonnes
colnames(data_consultant) <- data_consultant[1, ]
#on supprime la ligne 1
data_consultant <- data_consultant[-1, ]
# PARTIE de constitution des données sous la forme
data_tidy <- data_consultant %>% gather(key=QA, value=response, -`Adresse e-mail`)
#on contitue 2 colonnes la colonne QA
data_tidy <- data_tidy %>% mutate(Consultant =str_split(QA," - ")[[1]][1],
Question=str_split(QA," - ")[[1]][2])
#on renomme la 1er colonne
colnames(data_tidy)[1] <- "ID_consultant"
data_tidy[[1]] <- data_tidy[[1]] %>% as.numeric()
questionnaire_Consultant<- data_tidy %>% select(ID_consultant, Question, Consultant, response)
View(data_tidy)
questionnaire_Consultant<- data_tidy %>% select(ID_consultant, Question, Consultant, response)
save(questionnaire_Consultant, file="questionnaire_Consultant.RData")
setwd("D:/tmp/pr_augmented")
library(shiny)
library(shinydashboard)
library(shinythemes)
library(dplyr)
library(tidyr)
library(ggplot2)
library(gridExtra)
library(stringr)
library(forcats)
library(ggalt)
#Liste des questions posées Managers
q1C_str <- "Pour quelle personne ci-dessous considères-tu que ton avis n'est pas pertinent ?"
q2C_str <- "Dans quelle mesure considères-tu que les personnes suivantes pensent Business Technology ?"
q3C_str <- "Dans quelle mesure considères-tu que les personnes suivants pensent différemment ?"
q4C_str <- "Dans quelle mesure considères-tu que les personnes suivantes contribuent à l'intelligence connective ?"
q5C_str <- "Dans quelle mesure considères-tu que les personnes suivantes savent tirer profit de la diversité créatrice de valeur ?"
load("data/questionnaire_Consultant.RData")
questionnaire_consultant <- questionnaire_Consultant %>%
mutate(ID_cible = ID_consultant)
questionnaire_consultant <- questionnaire_consultant %>%
mutate(Consultant = str_trim(Consultant)) %>%
mutate(response = ifelse(Question == q1C_str,
ifelse(is.na(response), "Je connais", "Je ne connais pas"),
response))
questionnaire_connaissanceC <- questionnaire_consultant %>%
filter(Question == q1C_str)
View(questionnaire_consultant)
q1C_str
questionnaire_consultant[1,3]
questionnaire_consultant[1,2]
questionnaire_consultant[1,2] == q1C_str
questionnaire_consultant[1,3]
questionnaire_consultant[1,4]
questionnaire_consultant %>%
filter(Question == q1C_str)
questionnaire_consultant %>%
filter(Question != q1C_str)
setwd("D:/tmp/src")
setwd("D:/tmp/src")
data_consultant <- read_excel("PR2017 - PERF2016 - C_Datalab.xls", col_names = FALSE)
nbr_cols <- ncol(data_consultant)
nbr_rows <- nrow(data_consultant)
remove_html <- function(str_vec) {
str_trim(str_replace_all(data_consultant[[i]], "<.*?>", ""))
}
remove_html_str <- function(str_vec) {
str_trim(str_replace_all(str_vec, "<.*?>", ""))
}
respondant_ids <- data_consultant[-1,][[6]] %>% as.numeric()
# On recupere le nom des managers de la premiere question
for (i in 10:41) {
if (is.character(data_consultant[[i]])) {
data_consultant[[i]] <- remove_html(data_consultant[[i]])
}
}
# on supprime les colonnes vides
null_cols <- vector()
for (i in seq_len(nbr_cols)) {
if (sum(is.na(data_consultant[[i]]))/(nbr_rows - 1) == 1) {
null_cols <- c(null_cols, i)
}
}
#n supprime les lignes vides
data_consultant[null_cols] <- NULL
#Les 2 premieres lignes contiennent le nom des colonnes a reconmposer
col_fields <- data_consultant[c(1, 2),]
#les données commencent à partir de la ligne 3
true_data <- data_consultant[-c(1, 2),]
#les questions sont en ligne 1
question_rows <- data_consultant[1, ]
#les personnes associées aux questions sont en ligne 2
name_rows <- data_consultant[2, ]
#Liste des questions posées Managers
q1_str <- "Q1Pour quelle personne ci-dessous considères-tu que ton avis n'est pas pertinent ?"
q2_str <- "Q2Dans quelle mesure considères-tu que les personnes suivantes pensent Business Technology ?"
q3_str <- "Q3Dans quelle mesure considères-tu que les personnes suivants pensent différemment ?"
q4_str <- "Q4Dans quelle mesure considères-tu que les personnes suivantes contribuent à l'intelligence connective ?"
q5_str <- "Q5Dans quelle mesure considères-tu que les personnes suivantes savent tirer profit de la diversité créatrice de valeur ?"
#on supprime les 5 premieres colonnes
irrelevant_cols <- 1:5
data_consultant[irrelevant_cols] <- NULL
colnames(data_consultant) <- 1:ncol(data_consultant)
#Position des questions dans le fichier Excel +21
q1_cols <- 2:33
q2_cols <- 34:65
q3_cols <- 66:97
q4_cols <- 98:129
q5_cols <- 130:161
q2_5 <- 34:161
#Fonction qui permet de récupèrer le nom du manager sur la Q1
for (i in q1_cols) {
data_consultant[1, i] <- q1_str
data_consultant[2, i] <- str_trim(str_split(data_consultant[2, i], " - ")[[1]][1])
}
#fonction qui enleve le HTML sur les questions 2 à 5
for (i in q2_5) {
data_consultant[1, i] <- remove_html_str(data_consultant[1, i])
data_consultant[2, i] <- remove_html_str(data_consultant[2, i])
}
#Rappel de la questions sur la ligne 1
for (i in q2_cols) {
data_consultant[1, i] <- q2_str
}
for (i in q3_cols) {
data_consultant[1, i] <- q3_str
}
for (i in q4_cols) {
data_consultant[1, i] <- q4_str
}
for (i in q5_cols) {
data_consultant[1, i] <- q5_str
}
View(data_consultant)
#On remplace sur les colonnes 2 à 5 le HTML par Content Mécotent Neutre
for (i in q2_5) {
data_consultant[[i]][-c(1,2)] <- ifelse(str_detect(data_consultant[[i]][-c(1,2)], "Content"), "Content",
ifelse(str_detect(data_consultant[[i]][-c(1,2)], "Mécontent"),
"Mécontent", "Neutre"))
}
#On fusionne sur la ligne 1 la question avec le nom de l'associé
for (i in q1_cols) {
data_consultant[1, i] <- str_c( data_consultant[1, i],data_consultant[2, i],  sep = " - ")
}
#on fusionne également sur les autres questions
for (i in q2_5) {
data_consultant[1, i] <- str_c(data_consultant[1, i],data_consultant[2, i], sep = " - ")
}
#on supprime la ligne 2
data_consultant <- data_consultant[-2, ]
#on initialise le nom des colonnes
colnames(data_consultant) <- data_consultant[1, ]
#on supprime la ligne 1
data_consultant <- data_consultant[-1, ]
# PARTIE de constitution des données sous la forme
data_tidy <- data_consultant %>% gather(key=QA, value=response, -`Adresse e-mail`)
#on contitue 2 colonnes la colonne QA
data_tidy <- data_tidy %>% mutate(Consultant =str_split(QA," - ")[[1]][2],
Question=str_split(QA," - ")[[1]][1])
View(data_tidy)
#on renomme la 1er colonne
colnames(data_tidy)[1] <- "ID_consultant"
data_tidy[[1]] <- data_tidy[[1]] %>% as.numeric()
#on sauvegarde
questionnaire_Consultant<- data_tidy %>% select(ID_consultant, Question, Consultant, response)
save(questionnaire_Consultant, file="questionnaire_Consultant.RData")
setwd("D:/tmp/pr_augmented")
#Liste des questions posées Managers
q1C_str <- "Q1Pour quelle personne ci-dessous considères-tu que ton avis n'est pas pertinent ?"
q2C_str <- "Q2Dans quelle mesure considères-tu que les personnes suivantes pensent Business Technology ?"
q3C_str <- "Q3Dans quelle mesure considères-tu que les personnes suivants pensent différemment ?"
q4C_str <- "Q4Dans quelle mesure considères-tu que les personnes suivantes contribuent à l'intelligence connective ?"
q5C_str <- "Q5Dans quelle mesure considères-tu que les personnes suivantes savent tirer profit de la diversité créatrice de valeur ?"
load("data/questionnaire_Consultant.RData")
questionnaire_consultant <- questionnaire_Consultant %>%
mutate(ID_cible = ID_consultant)
questionnaire_consultant <- questionnaire_consultant %>%
mutate(Consultant = str_trim(Consultant)) %>%
mutate(response = ifelse(Question == q1C_str,
ifelse(is.na(response), "Je connais", "Je ne connais pas"),
response))
questionnaire_consultant %>%
filter(Question != q1C_str)
View(questionnaire_consultant)
setwd("D:/tmp/pr_augmented")
setwd("D:/tmp/src")
#PR2017 - PERF2016 - M_Datalab.xls
data_consultant <- read_excel("PR2017 - PERF2016 - C_Datalab.xls", col_names = FALSE)
nbr_cols <- ncol(data_consultant)
nbr_rows <- nrow(data_consultant)
remove_html <- function(str_vec) {
str_trim(str_replace_all(data_consultant[[i]], "<.*?>", ""))
}
remove_html_str <- function(str_vec) {
str_trim(str_replace_all(str_vec, "<.*?>", ""))
}
respondant_ids <- data_consultant[-1,][[6]] %>% as.numeric()
# On recupere le nom des managers de la premiere question
for (i in 10:41) {
if (is.character(data_consultant[[i]])) {
data_consultant[[i]] <- remove_html(data_consultant[[i]])
}
}
# on supprime les colonnes vides
null_cols <- vector()
for (i in seq_len(nbr_cols)) {
if (sum(is.na(data_consultant[[i]]))/(nbr_rows - 1) == 1) {
null_cols <- c(null_cols, i)
}
}
#n supprime les lignes vides
data_consultant[null_cols] <- NULL
#Les 2 premieres lignes contiennent le nom des colonnes a reconmposer
col_fields <- data_consultant[c(1, 2),]
#les données commencent à partir de la ligne 3
true_data <- data_consultant[-c(1, 2),]
#les questions sont en ligne 1
question_rows <- data_consultant[1, ]
#les personnes associées aux questions sont en ligne 2
name_rows <- data_consultant[2, ]
#Liste des questions posées Managers
q1_str <- "Q1Pour quelle personne ci-dessous considères-tu que ton avis n'est pas pertinent ?"
q2_str <- "Q2Dans quelle mesure considères-tu que les personnes suivantes pensent Business Technology ?"
q3_str <- "Q3Dans quelle mesure considères-tu que les personnes suivants pensent différemment ?"
q4_str <- "Q4Dans quelle mesure considères-tu que les personnes suivantes contribuent à l'intelligence connective ?"
q5_str <- "Q5Dans quelle mesure considères-tu que les personnes suivantes savent tirer profit de la diversité créatrice de valeur ?"
#on supprime les 5 premieres colonnes
irrelevant_cols <- 1:5
data_consultant[irrelevant_cols] <- NULL
colnames(data_consultant) <- 1:ncol(data_consultant)
#Position des questions dans le fichier Excel +21
q1_cols <- 2:33
q2_cols <- 34:65
q3_cols <- 66:97
q4_cols <- 98:129
q5_cols <- 130:161
q2_5 <- 34:161
#Fonction qui permet de récupèrer le nom du manager sur la Q1
for (i in q1_cols) {
data_consultant[1, i] <- q1_str
data_consultant[2, i] <- str_trim(str_split(data_consultant[2, i], " - ")[[1]][1])
}
#fonction qui enleve le HTML sur les questions 2 à 5
for (i in q2_5) {
data_consultant[1, i] <- remove_html_str(data_consultant[1, i])
data_consultant[2, i] <- remove_html_str(data_consultant[2, i])
}
#Rappel de la questions sur la ligne 1
for (i in q2_cols) {
data_consultant[1, i] <- q2_str
}
for (i in q3_cols) {
data_consultant[1, i] <- q3_str
}
for (i in q4_cols) {
data_consultant[1, i] <- q4_str
}
for (i in q5_cols) {
data_consultant[1, i] <- q5_str
}
#On remplace sur les colonnes 2 à 5 le HTML par Content Mécotent Neutre
for (i in q2_5) {
data_consultant[[i]][-c(1,2)] <- ifelse(str_detect(data_consultant[[i]][-c(1,2)], "Content"), "Content",
ifelse(str_detect(data_consultant[[i]][-c(1,2)], "Mécontent"),
"Mécontent", "Neutre"))
}
#On fusionne sur la ligne 1 la question avec le nom de l'associé
for (i in q1_cols) {
data_consultant[1, i] <- str_c( data_consultant[1, i],data_consultant[2, i],  sep = " - ")
}
#on fusionne également sur les autres questions
for (i in q2_5) {
data_consultant[1, i] <- str_c(data_consultant[1, i],data_consultant[2, i], sep = " - ")
}
#on supprime la ligne 2
data_consultant <- data_consultant[-2, ]
#on initialise le nom des colonnes
colnames(data_consultant) <- data_consultant[1, ]
#on supprime la ligne 1
data_consultant <- data_consultant[-1, ]
#data_manager[[6]] <- data_manager[[6]] %>% as.numeric()
data_tidy <- data_consultant %>% gather(key=QA, value=response, -`Adresse e-mail`)
View(data_tidy)
#on contitue 2 colonnes la colonne QA
data_tidy <- data_tidy %>% mutate(Consultant =str_split(QA," - ")[[1]][2],
Question=str_split(QA," - ")[[1]][1])
#on renomme la 1er colonne
colnames(data_tidy)[1] <- "ID_consultant"
data_tidy[[1]] <- data_tidy[[1]] %>% as.numeric()
data_tidy %>% select(ID_consultant, Question, Consultant, response)
questionnaire_Consultant<- data_tidy %>% select(ID_consultant, Question, Consultant, response)
View(questionnaire_Consultant)
View(data_tidy)
questionnaire_Consultant<- data_tidy %>% select(ID_consultant, Question, Consultant, response)
questionnaire_Consultant[9220,]
View(questionnaire_Consultant)
questionnaire_Consultant[9220,2]
data_tidy[9220,2]
data_tidy %>%
# mutate(Consultant =str_split(QA," - ")[[1]][2],
#                                 Question=str_split(QA," - ")[[1]][1])
separate(col=QA, into=c( "Consultant","Question"), sep = " - ")
data_tidy <- data_tidy %>%
# mutate(Consultant =str_split(QA," - ")[[1]][2],
#                                 Question=str_split(QA," - ")[[1]][1])
separate(col=QA, into=c( "Consultant","Question"), sep = " - ")
View(data_tidy)
#PR2017 - PERF2016 - M_Datalab.xls
data_consultant <- read_excel("PR2017 - PERF2016 - C_Datalab.xls", col_names = FALSE)
nbr_cols <- ncol(data_consultant)
nbr_rows <- nrow(data_consultant)
remove_html <- function(str_vec) {
str_trim(str_replace_all(data_consultant[[i]], "<.*?>", ""))
}
remove_html_str <- function(str_vec) {
str_trim(str_replace_all(str_vec, "<.*?>", ""))
}
respondant_ids <- data_consultant[-1,][[6]] %>% as.numeric()
# On recupere le nom des managers de la premiere question
for (i in 10:41) {
if (is.character(data_consultant[[i]])) {
data_consultant[[i]] <- remove_html(data_consultant[[i]])
}
}
# on supprime les colonnes vides
null_cols <- vector()
for (i in seq_len(nbr_cols)) {
if (sum(is.na(data_consultant[[i]]))/(nbr_rows - 1) == 1) {
null_cols <- c(null_cols, i)
}
}
#n supprime les lignes vides
data_consultant[null_cols] <- NULL
#Les 2 premieres lignes contiennent le nom des colonnes a reconmposer
col_fields <- data_consultant[c(1, 2),]
#les données commencent à partir de la ligne 3
true_data <- data_consultant[-c(1, 2),]
#les questions sont en ligne 1
question_rows <- data_consultant[1, ]
#les personnes associées aux questions sont en ligne 2
name_rows <- data_consultant[2, ]
#Liste des questions posées Managers
q1_str <- "Pour quelle personne ci-dessous considères-tu que ton avis n'est pas pertinent ?"
q2_str <- "Dans quelle mesure considères-tu que les personnes suivantes pensent Business Technology ?"
q3_str <- "Dans quelle mesure considères-tu que les personnes suivants pensent différemment ?"
q4_str <- "Dans quelle mesure considères-tu que les personnes suivantes contribuent à l'intelligence connective ?"
q5_str <- "Dans quelle mesure considères-tu que les personnes suivantes savent tirer profit de la diversité créatrice de valeur ?"
#on supprime les 5 premieres colonnes
irrelevant_cols <- 1:5
data_consultant[irrelevant_cols] <- NULL
colnames(data_consultant) <- 1:ncol(data_consultant)
#Position des questions dans le fichier Excel +21
q1_cols <- 2:33
q2_cols <- 34:65
q3_cols <- 66:97
q4_cols <- 98:129
q5_cols <- 130:161
q2_5 <- 34:161
#Fonction qui permet de récupèrer le nom du manager sur la Q1
for (i in q1_cols) {
data_consultant[1, i] <- q1_str
data_consultant[2, i] <- str_trim(str_split(data_consultant[2, i], " - ")[[1]][1])
}
#fonction qui enleve le HTML sur les questions 2 à 5
for (i in q2_5) {
data_consultant[1, i] <- remove_html_str(data_consultant[1, i])
data_consultant[2, i] <- remove_html_str(data_consultant[2, i])
}
#Rappel de la questions sur la ligne 1
for (i in q2_cols) {
data_consultant[1, i] <- q2_str
}
for (i in q3_cols) {
data_consultant[1, i] <- q3_str
}
for (i in q4_cols) {
data_consultant[1, i] <- q4_str
}
for (i in q5_cols) {
data_consultant[1, i] <- q5_str
}
#On remplace sur les colonnes 2 à 5 le HTML par Content Mécotent Neutre
for (i in q2_5) {
data_consultant[[i]][-c(1,2)] <- ifelse(str_detect(data_consultant[[i]][-c(1,2)], "Content"), "Content",
ifelse(str_detect(data_consultant[[i]][-c(1,2)], "Mécontent"),
"Mécontent", "Neutre"))
}
#On fusionne sur la ligne 1 la question avec le nom de l'associé
for (i in q1_cols) {
data_consultant[1, i] <- str_c( data_consultant[1, i],data_consultant[2, i],  sep = " - ")
}
#on fusionne également sur les autres questions
for (i in q2_5) {
data_consultant[1, i] <- str_c(data_consultant[1, i],data_consultant[2, i], sep = " - ")
}
#on supprime la ligne 2
data_consultant <- data_consultant[-2, ]
#on initialise le nom des colonnes
colnames(data_consultant) <- data_consultant[1, ]
#on supprime la ligne 1
data_consultant <- data_consultant[-1, ]
#data_manager[[6]] <- data_manager[[6]] %>% as.numeric()
# PARTIE de constitution des données sous la forme
data_tidy <- data_consultant %>% gather(key=QA, value=response, -`Adresse e-mail`)
aa <- data_tidy[1,]%>% mutate(Consultant =str_split(QA," - ")[[1]][2],
Question=str_split(QA," - ")[[1]][1])
#on contitue 2 colonnes la colonne QA
data_tidy <- data_tidy %>% separate(col=QA, into=c( "Question","Consultant"), sep = " - ")
# mutate(Consultant =str_split(QA," - ")[[1]][2],
#                                 Question=str_split(QA," - ")[[1]][1])
#on renomme la 1er colonne
colnames(data_tidy)[1] <- "ID_consultant"
data_tidy[[1]] <- data_tidy[[1]] %>% as.numeric()
#on sauvegarde
questionnaire_Consultant<- data_tidy %>% select(ID_consultant, Question, Consultant, response)
save(questionnaire_Consultant, file="questionnaire_Consultant.RData")
View(questionnaire_Consultant)
runApp('D:/tmp/pr_augmented')
setwd("D:/tmp/pr_augmented")
runApp()
runApp()
View(data_tidy)
runApp()
runApp()
