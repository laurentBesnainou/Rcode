library(googleVis)
df=data.frame(name=c("James", "Curry", "Harden"),
Pts=c(20,23,34),
Rbs=c(13,7,9))
ColumnC <- gvisColumnChart(df)
plot(ColumnC)
LineC2 <- gvisLineChart(df, "name", c("val1","val2"),
options=list(
series="[{targetAxisIndex: 0},
{targetAxisIndex:1}]",
vAxes="[{title:'val1'}, {title:'val2'}]"
))
plot(LineC2)
library(tidyverse)
library(ggthemes)
library(rgdal)
library(viridis)
library(extrafont)
library(extrafont)
library(viridis)
library(rgdal)
load(url("https://ikashnitsky.github.io/doc/misc/map-subplots/df-27-261-urb-rur.RData"))
load(url("https://ikashnitsky.github.io/doc/misc/map-subplots/spatial-27-261.RData"))
bord <- fortify(Sborders)
fort <- fortify(Sn2, region = "id")
fort_map <- left_join(df,fort,"id")
basemap <- ggplot()+
geom_polygon(data = fortify(Sneighbors),aes(x = long, y = lat, group = group),
fill = "grey90",color = "grey90")+
coord_equal(ylim = c(1350000,5450000), xlim = c(2500000, 6600000))+
theme_map(base_family = myfont)+
theme(panel.border = element_rect(color = "black",size = .5,fill = NA),
legend.position = c(1, 1),
legend.justification = c(1, 1),
legend.background = element_rect(colour = NA, fill = NA),
legend.title = element_text(size = 15),
legend.text = element_text(size = 15))+
scale_x_continuous(expand = c(0,0)) +
scale_y_continuous(expand = c(0,0)) +
labs(x = NULL, y = NULL)
basemap
basemap <- ggplot()+
geom_polygon(data = fortify(Sneighbors),aes(x = long, y = lat, group = group),
fill = "grey90",color = "grey90")+
coord_equal(ylim = c(1350000,5450000), xlim = c(2500000, 6600000))+
theme_map(base_family = myfont)+
theme(panel.border = element_rect(color = "black",size = .5,fill = NA),
legend.position = c(1, 1),
legend.justification = c(1, 1),
legend.background = element_rect(colour = NA, fill = NA),
legend.title = element_text(size = 15),
legend.text = element_text(size = 15))+
scale_x_continuous(expand = c(0,0)) +
scale_y_continuous(expand = c(0,0)) +
labs(x = NULL, y = NULL)
load(url("https://ikashnitsky.github.io/doc/misc/map-subplots/df-27-261-urb-rur.RData"))
View(df)
# create a blank map
basemap <- ggplot()+
geom_polygon(data = fortify(Sborders),aes(x = long, y = lat, group = group),
fill = "grey90",color = "grey90")+
coord_equal(ylim = c(1350000,5450000), xlim = c(2500000, 6600000))+
theme_map(base_family = myfont)+
theme(panel.border = element_rect(color = "black",size = .5,fill = NA),
legend.position = c(1, 1),
legend.justification = c(1, 1),
legend.background = element_rect(colour = NA, fill = NA),
legend.title = element_text(size = 15),
legend.text = element_text(size = 15))+
scale_x_continuous(expand = c(0,0)) +
scale_y_continuous(expand = c(0,0)) +
labs(x = NULL, y = NULL)
bord <- fortify(Sborders)
load("https://ikashnitsky.github.io/doc/misc/map-hacking/map-hacking.Rdata")
setwd("D:/tmp/MapsTUTO")
load("map-hacking.Rdata")
load("map-hacking.Rdata")
bord <- fortify(Sborders)
fort <- fortify(Sn2, region = "id")
View(df)
View(fort)
fort_hack <- fort %>%
left_join(df %>% select(id, subregion), 'id') %>%
mutate(long = ifelse(subregion=='E', long + 5e5, long),
long = ifelse(subregion=='S', long + 2e5, long),
lat = ifelse(subregion=='S', lat - 5e5, lat),
long = ifelse(subregion=='W', long - 2e5, long))
# create color pallete
brbg <- RColorBrewer::brewer.pal(11,"BrBG")
brbg4 <- brbg[c(4,9,2,11)]
# create the two-dim legend
ggleg <- ggplot()+
coord_equal(xlim = c(0,1), ylim = c(0,1), expand = c(0,0))+
annotate('rect', xmin = .45, xmax = .6, ymin = .1, ymax = .25,
fill = brbg4[1], color = NA)+
annotate('rect', xmin = .45, xmax = .6, ymin = .4, ymax = .55,
fill = brbg4[2], color = NA)+
annotate('rect', xmin = .75, xmax = .9, ymin = .1, ymax = .25,
fill = brbg4[3], color = NA)+
annotate('rect', xmin = .75, xmax = .9, ymin = .4, ymax = .55,
fill = brbg4[4], color = NA)+
annotate('rect', xmin = .05, xmax = .95, ymin = .05, ymax = .95,
fill = NA, color = "grey20")+
annotate('text', x = .35, y = c(.175, .475), vjust = .5, hjust = 1,
size = 6, fontface = 2, label = c('POOR', 'RICH'), family = font) +
annotate('text', x = c(.525, .825), y = .65, vjust = 0, hjust = .5,
size = 6, fontface = 2, label = c('LOW', 'HIGH'), family = font)+
annotate('text', x = .1, y = .9, vjust = 1, hjust = 0,
size = 7, fontface = 2, label = "LEGEND", family = font)+
theme_map()
# create the blank map
basemap <- ggplot()+
coord_equal(ylim=c(900000,5400000), xlim=c(2500000, 7000000), expand = c(0,0))+
theme_map()+
theme(panel.border=element_rect(color = 'black',size=.5,fill = NA),
legend.position = 'none')
# the main map
map_temp <- basemap +
geom_map(map = fort_hack, data = df, aes(map_id=id, fill=group))+
scale_fill_manual(values = brbg4[c(3, 1, 4, 2)])
# now combine the map and the legend
map <- ggplot() +
coord_equal(xlim = c(0,1), ylim = c(0,1), expand = c(0,0))+
annotation_custom(ggplotGrob(map_temp), xmin = 0, xmax = 1, ymin = 0, ymax = 1)+
annotation_custom(ggplotGrob(ggleg), xmin = 0.72, xmax = 0.99, ymin = 0.72, ymax = 0.99)+
labs(title = "Labour force and income in EU-27 NUTS-2 regions",
subtitle = "Within each of the three macro-regions of Europe - Westren, Southern, and Eastern -\nNUTS-2 regions are classified in 4 groups according to the level of GDP per capita\nand the share of working age population in 2008",
caption = "Data: Eurostat\nAuthor: Ilya Kashnitsky (ikashnitsky.github.io)")+
theme_ipsum_rc(plot_title_size = 30, subtitle_size = 20, caption_size = 15)
# create the two-dim legend
ggleg <- ggplot()+
coord_equal(xlim = c(0,1), ylim = c(0,1), expand = c(0,0))+
annotate('rect', xmin = .45, xmax = .6, ymin = .1, ymax = .25,
fill = brbg4[1], color = NA)+
annotate('rect', xmin = .45, xmax = .6, ymin = .4, ymax = .55,
fill = brbg4[2], color = NA)+
annotate('rect', xmin = .75, xmax = .9, ymin = .1, ymax = .25,
fill = brbg4[3], color = NA)+
annotate('rect', xmin = .75, xmax = .9, ymin = .4, ymax = .55,
fill = brbg4[4], color = NA)+
annotate('rect', xmin = .05, xmax = .95, ymin = .05, ymax = .95,
fill = NA, color = "grey20")+
annotate('text', x = .35, y = c(.175, .475), vjust = .5, hjust = 1,
size = 6, fontface = 2, label = c('POOR', 'RICH'), family = font) +
annotate('text', x = c(.525, .825), y = .65, vjust = 0, hjust = .5,
size = 6, fontface = 2, label = c('LOW', 'HIGH'), family = font)+
annotate('text', x = .1, y = .9, vjust = 1, hjust = 0,
size = 7, fontface = 2, label = "LEGEND", family = font)+
theme_map()
font <- "Roboto Condensed"
ggleg <- ggplot()+
coord_equal(xlim = c(0,1), ylim = c(0,1), expand = c(0,0))+
annotate('rect', xmin = .45, xmax = .6, ymin = .1, ymax = .25,
fill = brbg4[1], color = NA)+
annotate('rect', xmin = .45, xmax = .6, ymin = .4, ymax = .55,
fill = brbg4[2], color = NA)+
annotate('rect', xmin = .75, xmax = .9, ymin = .1, ymax = .25,
fill = brbg4[3], color = NA)+
annotate('rect', xmin = .75, xmax = .9, ymin = .4, ymax = .55,
fill = brbg4[4], color = NA)+
annotate('rect', xmin = .05, xmax = .95, ymin = .05, ymax = .95,
fill = NA, color = "grey20")+
annotate('text', x = .35, y = c(.175, .475), vjust = .5, hjust = 1,
size = 6, fontface = 2, label = c('POOR', 'RICH'), family = font) +
annotate('text', x = c(.525, .825), y = .65, vjust = 0, hjust = .5,
size = 6, fontface = 2, label = c('LOW', 'HIGH'), family = font)+
annotate('text', x = .1, y = .9, vjust = 1, hjust = 0,
size = 7, fontface = 2, label = "LEGEND", family = font)+
theme_map()
basemap <- ggplot()+
coord_equal(ylim=c(900000,5400000), xlim=c(2500000, 7000000), expand = c(0,0))+
theme_map()+
theme(panel.border=element_rect(color = 'black',size=.5,fill = NA),
legend.position = 'none')
basemap
map_temp <- basemap +
geom_map(map = fort_hack, data = df, aes(map_id=id, fill=group))+
scale_fill_manual(values = brbg4[c(3, 1, 4, 2)])
map_temp
map <- ggplot() +
coord_equal(xlim = c(0,1), ylim = c(0,1), expand = c(0,0))+
annotation_custom(ggplotGrob(map_temp), xmin = 0, xmax = 1, ymin = 0, ymax = 1)+
annotation_custom(ggplotGrob(ggleg), xmin = 0.72, xmax = 0.99, ymin = 0.72, ymax = 0.99)+
labs(title = "Labour force and income in EU-27 NUTS-2 regions",
subtitle = "Within each of the three macro-regions of Europe - Westren, Southern, and Eastern -\nNUTS-2 regions are classified in 4 groups according to the level of GDP per capita\nand the share of working age population in 2008",
caption = "Data: Eurostat\nAuthor: Ilya Kashnitsky (ikashnitsky.github.io)")+
theme_ipsum_rc(plot_title_size = 30, subtitle_size = 20, caption_size = 15)
map <- ggplot() +
coord_equal(xlim = c(0,1), ylim = c(0,1), expand = c(0,0))+
annotation_custom(ggplotGrob(map_temp), xmin = 0, xmax = 1, ymin = 0, ymax = 1)+
annotation_custom(ggplotGrob(ggleg), xmin = 0.72, xmax = 0.99, ymin = 0.72, ymax = 0.99)+
labs(title = "Labour force and income in EU-27 NUTS-2 regions",
subtitle = "Within each of the three macro-regions of Europe - Westren, Southern, and Eastern -\nNUTS-2 regions are classified in 4 groups according to the level of GDP per capita\nand the share of working age population in 2008",
caption = "Data: Eurostat\nAuthor: Ilya Kashnitsky (ikashnitsky.github.io)")
# join spatial and statistical data
fort_map <- left_join(df,fort,"id")
myfont <- "Roboto Condensed"
# load the already prepared data
load(url("https://ikashnitsky.github.io/doc/misc/map-subplots/df-27-261-urb-rur.RData"))
load(url("https://ikashnitsky.github.io/doc/misc/map-subplots/spatial-27-261.RData"))
# fortify spatial objects
bord <- fortify(Sborders)
fort <- fortify(Sn2, region = "id")
# join spatial and statistical data
fort_map <- left_join(df,fort,"id")
# create a blank map
basemap <- ggplot()+
geom_polygon(data = fortify(Sneighbors),aes(x = long, y = lat, group = group),
fill = "grey90",color = "grey90")+
coord_equal(ylim = c(1350000,5450000), xlim = c(2500000, 6600000))+
theme_map(base_family = myfont)+
theme(panel.border = element_rect(color = "black",size = .5,fill = NA),
legend.position = c(1, 1),
legend.justification = c(1, 1),
legend.background = element_rect(colour = NA, fill = NA),
legend.title = element_text(size = 15),
legend.text = element_text(size = 15))+
scale_x_continuous(expand = c(0,0)) +
scale_y_continuous(expand = c(0,0)) +
labs(x = NULL, y = NULL)
# create a nice mosaic plot; solution from SO:
# http://stackoverflow.com/a/19252389/4638884
makeplot_mosaic <- function(data, x, y, ...){
xvar <- deparse(substitute(x))
yvar <- deparse(substitute(y))
mydata <- data[c(xvar, yvar)];
mytable <- table(mydata);
widths <- c(0, cumsum(apply(mytable, 1, sum)));
heights <- apply(mytable, 1, function(x){c(0, cumsum(x/sum(x)))});
alldata <- data.frame();
allnames <- data.frame();
for(i in 1:nrow(mytable)){
for(j in 1:ncol(mytable)){
alldata <- rbind(alldata, c(widths[i],
widths[i+1],
heights[j, i],
heights[j+1, i]));
}
}
colnames(alldata) <- c("xmin", "xmax", "ymin", "ymax")
alldata[[xvar]] <- rep(dimnames(mytable)[[1]],
rep(ncol(mytable), nrow(mytable)));
alldata[[yvar]] <- rep(dimnames(mytable)[[2]], nrow(mytable));
ggplot(alldata, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax)) +
geom_rect(color="white", aes_string(fill=yvar)) +
xlab(paste(xvar, "(count)")) +
ylab(paste(yvar, "(proportion)"));
}
typ_mosaic <- makeplot_mosaic(data = df %>% mutate(type = as.numeric(type)),
x = subregion, y = type)+
theme_void()+
scale_fill_viridis(option = "B", discrete = T, end = .8)+
scale_y_continuous(limits = c(0, 1.4))+
annotate("text",x = c(27, 82.5, 186), y = 1.05,
label=c("EAST", "SOUTH", "WEST"),
size = 4, fontface = 2,
vjust = 0.5, hjust = 0,
family = myfont) +
coord_flip()+
theme(legend.position = "none")
# a nice small function to overcome some mapping problems with nested polygons
# see more at SO
# https://stackoverflow.com/questions/21748852
gghole <- function (fort) {
poly <- fort[fort$id %in% fort[fort$hole, ]$id, ]
hole <- fort[!fort$id %in% fort[fort$hole, ]$id, ]
out <- list(poly, hole)
names(out) <- c("poly", "hole")
return(out)
}
# annotate a small map of the subregions of Europe
an_sub <- basemap +
geom_polygon(data = gghole(fort_map)[[1]],
aes(x = long, y = lat, group = group, fill = subregion),
color = NA)+
geom_polygon(data  =  gghole(fort_map)[[2]],
aes(x = long, y = lat, group = group, fill = subregion),
color = NA)+
scale_fill_manual(values = rev(brbg3)) +
theme(legend.position = "none")
an_sub
basemap
basemap +
geom_polygon(data = gghole(fort_map)[[1]],
aes(x = long, y = lat, group = group, fill = subregion),
color = NA)+
geom_polygon(data  =  gghole(fort_map)[[2]],
aes(x = long, y = lat, group = group, fill = subregion),
color = NA)+
scale_fill_manual(values = rev(brbg3)) +
theme(legend.position = "none")
an_sub <- basemap +
geom_polygon(data = gghole(fort_map)[[1]],
aes(x = long, y = lat, group = group, fill = subregion),
color = NA)+
geom_polygon(data  =  gghole(fort_map)[[2]],
aes(x = long, y = lat, group = group, fill = subregion),
color = NA)+
# scale_fill_manual(values = rev(brbg3)) +
theme(legend.position = "none")
# finally the map of Urb/Rur typology
caption <- "Classification: De Beer, J., Van Der Gaag, N., & Van Der Erf, R. (2014). New classification of urban and rural NUTS 2 regions in Europe. NIDI Working Papers, 2014/3. Retrieved from http://www.nidi.nl/shared/content/output/papers/nidi-wp-2014-03.pdf
\nIlya Kashnitsky (ikashnitsky.github.io)"
typ <-  basemap +
geom_polygon(data = gghole(fort_map)[[1]],
aes(x=long, y=lat, group=group, fill=type),
color="grey30",size=.1)+
geom_polygon(data = gghole(fort_map)[[2]],
aes(x=long, y=lat, group=group, fill=type),
color="grey30",size=.1)+
scale_fill_viridis("NEUJOBS\ncalssification of\nNUTS-2 regions",
option = "B", discrete = T, end = .8)+
geom_path(data = bord, aes(x = long, y = lat, group = group),
color = "grey20",size = .5) +
annotation_custom(grob = ggplotGrob(typ_mosaic),
xmin = 2500000, xmax = 4000000,
ymin = 4450000, ymax = 5450000)+
annotation_custom(grob = ggplotGrob(an_sub),
xmin = 5400000, xmax = 6600000,
ymin = 2950000, ymax = 4150000)+
labs(title = "Urban / Rural classification of NUTS-2 regions of Europe\n",
caption = paste(strwrap(caption, width = 95), collapse = '\n'))+
theme(plot.title = element_text(size = 20),
plot.caption = element_text(size = 12))
typ
basemap +
geom_polygon(data = gghole(fort_map)[[1]],
aes(x=long, y=lat, group=group, fill=type),
color="grey30",size=.1)
geom_polygon(data = gghole(fort_map)[[1]],
aes(x=long, y=lat, group=group, fill=type),
color="grey30",size=.1)+
geom_polygon(data = gghole(fort_map)[[2]],
aes(x=long, y=lat, group=group, fill=type),
color="grey30",size=.1)
basemap +
geom_polygon(data = gghole(fort_map)[[1]],
aes(x=long, y=lat, group=group, fill=type),
color="grey30",size=.1)+
geom_polygon(data = gghole(fort_map)[[2]],
aes(x=long, y=lat, group=group, fill=type),
color="grey30",size=.1)
basemap +
geom_polygon(data = gghole(fort_map)[[1]],
aes(x=long, y=lat, group=group, fill=type),
color="grey30",size=.1)+
geom_polygon(data = gghole(fort_map)[[2]],
aes(x=long, y=lat, group=group, fill=type),
color="grey30",size=.1)+
scale_fill_viridis("NEUJOBS\ncalssification of\nNUTS-2 regions",
option = "B", discrete = T, end = .8)
basemap +
geom_polygon(data = gghole(fort_map)[[1]],
aes(x=long, y=lat, group=group, fill=type),
color="grey30",size=.1)+
geom_polygon(data = gghole(fort_map)[[2]],
aes(x=long, y=lat, group=group, fill=type),
color="grey30",size=.1)+
scale_fill_viridis("NEUJOBS\ncalssification of\nNUTS-2 regions",
option = "B", discrete = T, end = .8)+
geom_path(data = bord, aes(x = long, y = lat, group = group),
color = "grey20",size = .5)
basemap +
geom_polygon(data = gghole(fort_map)[[1]],
aes(x=long, y=lat, group=group, fill=type),
color="grey30",size=.1)+
geom_polygon(data = gghole(fort_map)[[2]],
aes(x=long, y=lat, group=group, fill=type),
color="grey30",size=.1)+
scale_fill_viridis("NEUJOBS\ncalssification of\nNUTS-2 regions",
option = "B", discrete = T, end = .8)+
geom_path(data = bord, aes(x = long, y = lat, group = group),
color = "grey20",size = .5) +
annotation_custom(grob = ggplotGrob(typ_mosaic),
xmin = 2500000, xmax = 4000000,
ymin = 4450000, ymax = 5450000
)
basemap +
geom_polygon(data = gghole(fort_map)[[1]],
aes(x=long, y=lat, group=group, fill=type),
color="grey30",size=.1)+
geom_polygon(data = gghole(fort_map)[[2]],
aes(x=long, y=lat, group=group, fill=type),
color="grey30",size=.1)+
scale_fill_viridis("NEUJOBS\ncalssification of\nNUTS-2 regions",
option = "B", discrete = T, end = .8)+
geom_path(data = bord, aes(x = long, y = lat, group = group),
color = "grey20",size = .5) +
annotation_custom(grob = ggplotGrob(typ_mosaic),
xmin = 0, xmax = 4000000,
ymin = 4450000, ymax = 5450000)
basemap +
geom_polygon(data = gghole(fort_map)[[1]],
aes(x=long, y=lat, group=group, fill=type),
color="grey30",size=.1)+
geom_polygon(data = gghole(fort_map)[[2]],
aes(x=long, y=lat, group=group, fill=type),
color="grey30",size=.1)+
scale_fill_viridis("NEUJOBS\ncalssification of\nNUTS-2 regions",
option = "B", discrete = T, end = .8)+
geom_path(data = bord, aes(x = long, y = lat, group = group),
color = "grey20",size = .5) +
annotation_custom(grob = ggplotGrob(typ_mosaic),
xmin = 1, xmax = 10,
ymin = 4450000, ymax = 5450000)
basemap +
geom_polygon(data = gghole(fort_map)[[1]],
aes(x=long, y=lat, group=group, fill=type),
color="grey30",size=.1)+
geom_polygon(data = gghole(fort_map)[[2]],
aes(x=long, y=lat, group=group, fill=type),
color="grey30",size=.1)+
scale_fill_viridis("NEUJOBS\ncalssification of\nNUTS-2 regions",
option = "B", discrete = T, end = .8)+
geom_path(data = bord, aes(x = long, y = lat, group = group),
color = "grey20",size = .5) +
annotation_custom(grob = ggplotGrob(typ_mosaic),
xmin = 1000000, xmax = 1000010,
ymin = 4450000, ymax = 5450000)
