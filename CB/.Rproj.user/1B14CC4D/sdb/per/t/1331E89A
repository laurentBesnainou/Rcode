{
    "collab_server" : "",
    "contents" : "server <- function(input, output) {\n  \n  #Vaues Box sur le Staffing & le Pipe\n  output$TotalSylvie <- renderValueBox({\n    data <- CB_Data %>% filter(Qui==\"Sylvie\", year(Date)==input$an, month(Date) ==input$mois) %>%  select (Montant ) \n    \n    valueBox(\n      sum(data$Montant),\n      \"Sylvie\", icon = icon(\"plus\", lib = \"glyphicon\"),\n      color = \"green\"\n    )\n  })\n  \n  output$TotalLaurent <- renderValueBox({\n    \n    data <- CB_Data %>% filter(Qui==\"Laurent\", year(Date)==input$an, month(Date) ==input$mois) %>%  select (Montant ) \n    \n    valueBox(\n      sum(data$Montant),\n      \"Laurent\", icon = icon(\"plus\", lib = \"glyphicon\"),\n      color = \"green\"\n    )\n  })\n  \n  output$CB_plot_Nature <- renderPlot({\n    #browser()\n    ## On regarde pour le mois en cours la répartition des dépenses en comparaison avec 2015 et 2016\n\n     data <- CB_Data %>% filter(Qui==\"Sylvie\", year(Date)==input$an, month(Date) ==input$mois) %>%  select (Type,Montant ) %>% group_by(Type) %>%\n       summarise(Budget= sum(Montant))\n     \n     # PlotFlower(lengths=data$Budget, labels=data$Type,widths=data$Budget, disk=0.3, main=\"Répartition\",\n     #            center=\"Détail\",main=data$Budget, lty=2)\n     couleur <-  brewer.pal(7, 'Spectral')\n     NomCol <- c( \"Ecole\", \"Habits\", \"Loisirs\", \"Maison\", \"Nourriture\", \"Santé\", \"Transport\")\n     couleurP <- data.frame(Type=NomCol,Coul=couleur)\n     #on ajoute la couleur au type\n     data <- merge(x = data, y = couleurP, by = \"Type\", all.x = TRUE)\n     data <- data %>% mutate (Coul= as.character(Coul)) %>% mutate(Type = paste(Type,Budget,sep=\" \"))\n\n  PlotFlower(lengths=data$Budget, labels=data$Type,widths=data$Budget, fill.col =data$Coul,\n             disk=0.4, label.cex=0.9, label.offset=0.1, cex=1.2, cex.main=1.5, center=\"Sylvie\")\n\n    #   geom_line(data=CB_Mean,aes(group=ANNEE, colour=ANNEE),size=1) + scale_fill_manual(values=c(\"#CC6666\", \"#9999CC\"))\n    # \n   \n  })\n  \n  \n  output$CB_plot_Nature2 <- renderPlot({\n    #browser()\n    ## On regarde pour le mois en cours la répartition des dépenses en comparaison avec 2015 et 2016\n    #browser()\n    data <- CB_Data %>% filter(Qui==\"Laurent\", year(Date)==input$an, month(Date) ==input$mois) %>%  select (Type,Montant ) %>% group_by(Type) %>%\n      summarise(Budget= sum(Montant))\n    \n    # PlotFlower(lengths=data$Budget, labels=data$Type,widths=data$Budget, disk=0.3, main=\"Répartition\",\n    #            center=\"Détail\",main=data$Budget, lty=2)\n    couleur <-  brewer.pal(7, 'Spectral')\n    NomCol <- c( \"Ecole\", \"Habits\", \"Loisirs\", \"Maison\", \"Nourriture\", \"Santé\", \"Transport\")\n    couleurP <- data.frame(Type=NomCol,Coul=couleur)\n    #on ajoute la couleur au type\n    data <- merge(x = data, y = couleurP, by = \"Type\", all.x = TRUE)\n    data <- data %>% mutate (Coul= as.character(Coul)) %>% mutate(Type = paste(Type,Budget,sep=\" \"))\n    \n    PlotFlower(lengths=data$Budget, labels=data$Type,widths=data$Budget, fill.col =data$Coul,\n               disk=0.4, label.cex=0.9, label.offset=0.1, cex=1.2, cex.main=1.5, center=\"Laurent\")\n    \n    #   geom_line(data=CB_Mean,aes(group=ANNEE, colour=ANNEE),size=1) + scale_fill_manual(values=c(\"#CC6666\", \"#9999CC\"))\n    # \n    \n  })\n  \n  output$CB_plot_Commercant <- renderPlot({\n    \n    # # On regarde pour la nourriture la comparaison par année\n    dataPlot <- data.frame(ANNEE=c(rep(\"2015\",12),rep(\"2016\",12),rep(\"2017\",12)),MOIS=c(1:12,1:12,1:12))\n    dataPlot <- dataPlot %>% mutate(ANNEE = factor(ANNEE)) %>% mutate(MOIS = factor(MOIS))\n    Data_Raw <- CB_Data %>% filter (Client %in% input$mychooser$right) %>% group_by(ANNEE,MOIS) %>%\n      summarise(Budget= sum(Montant)) \n    #on fait une jointure sur ANNEE MOIS puis un cumsum\n    plotCA <- left_join(dataPlot, Data_Raw, by = c(\"ANNEE\" = \"ANNEE\", \"MOIS\" = \"MOIS\"))\n    plotCA <- plotCA %>% replace_na(list(Budget = 0))\n    \n    plotCA <- plotCA%>%  group_by(ANNEE) %>% mutate(cumsum=cumsum(Budget)) \n    \n    plotCA %>%\n      ggplot(aes(x=MOIS, y=cumsum, group=ANNEE, colour=ANNEE)) +\n      geom_line() +\n      geom_point() +\n      scale_fill_brewer(palette = \"YlOrRd\") + # il y a aussi un scale_color_brewer\n      labs(x = \"Mois\",\n           y = \"Dépenses CB(€)\",\n           fill = \"\") +\n      theme_bw() +\n      theme(axis.text.x = element_text(hjust = 1), legend.position=\"bottom\")\n    #   geom_line(data=CB_Mean,aes(group=ANNEE, colour=ANNEE),size=1) + scale_fill_manual(values=c(\"#CC6666\", \"#9999CC\"))\n    # \n    \n  })\n  output$Categorie <- renderUI({\n    cat <- CB_Data %>% filter (Type %in% input$Type1) %>% distinct(Categorie)\n    cat <- sort(cat$Categorie)\n    \n    checkboxGroupInput(\"Cat1\", \"Choississez\", cat,inline = TRUE,selected=cat)\n  })\n  \n  output$CB_plot_Categorie <- renderPlot({\n    \n    # # On regarde pour la nourriture la comparaison par année\n    CB_Data %>% filter (Type == input$Type1, Categorie %in% input$Cat1) %>% group_by(ANNEE, Categorie, MOIS) %>%\n      summarise(Budget= sum(Montant)) %>% \n      ggplot(aes(x=MOIS, y=Budget)) +\n      geom_bar(aes(group=ANNEE, fill= ANNEE), stat=\"identity\",position=\"dodge\")+\n      #scale_fill_brewer(palette = \"YlOrRd\") + # il y a aussi un scale_color_brewer\n      labs(x = \"Mois\",\n           y = \"Dépenses CB(€)\",\n           fill = \"\") +\n      theme_solarized() +\n      theme(axis.text.x = element_text(hjust = 1), legend.position=\"bottom\")  + facet_grid(. ~ Categorie)\n    #   geom_line(data=CB_Mean,aes(group=ANNEE, colour=ANNEE),size=1) + scale_fill_manual(values=c(\"#CC6666\", \"#9999CC\"))\n    # \n  })\n  \n  \n  output$tbl <- renderTable({\n    datasetInput  <- CB_Data %>% \n      filter (Type == input$Type1, Categorie %in% input$Cat1) %>% \n      group_by(ANNEE,Client,Type, Categorie) %>% \n     summarise(Depenses = sum(Montant))  %>% spread(ANNEE , Depenses, fill=\" \") %>% \n      arrange(Client) %>% select(-Type) \n    titre <- c(\"Type\",\t\"Client\",\t\"Categorie\",\t\"a2015\",\t\"a2016\",\t\"a2017\")\n    nb <- length(colnames(datasetInput))\n    \n    colnames(datasetInput) <- titre[1:nb]\n    if (nb == length(titre)) {\n      datasetInput  <- datasetInput  %>% \n        mutate(Projection2017 = as.double(a2017)*12/(month(now())-1)) %>%\n        mutate(Ecart2017_2016 = as.double(Projection2017)-as.double(a2016))\n    }\n    \n    # %>% \n      # mutate(Ecart2016 = as.double(Projection2017) - as.double(a2016))\n    datasetInput}\n  )\n  \n  \n  output$tbl_TOTAL <- renderTable({\n    datasetInput  <- CB_Data %>% filter (Type %in% input$Type, ANNEE==\"2017\") %>% group_by(Type) %>% \n      summarise(Depenses = sum(Montant)) %>% arrange(Type)\n    datasetInput}\n  )\n  \n  \n  output$hcontainer <- renderHighchart({\n    \n    # # On regarde pour la nourriture la comparaison par année\n    plot_chart <-   CB_Data %>% \n      filter (Type %in% input$Type) %>% \n      group_by(ANNEE,MOIS) %>%\n      summarise(Budget= sum(Montant)) \n    \n    plot_chart2015 <- plot_chart %>% filter (ANNEE == 2015)\n    plot_chart2016 <- plot_chart %>% filter (ANNEE == 2016)\n    plot_chart2017 <- plot_chart %>% filter (ANNEE == 2017)\n    nbRow <- nrow(plot_chart2017)\n    plot_Mois <- data.frame(MOIS=factor(c(1:12)),Budget=rep(0,12))\n    plot_chart2015 <- left_join(plot_Mois,plot_chart2015, by=\"MOIS\")\n    plot_chart2016 <- left_join(plot_Mois,plot_chart2016, by=\"MOIS\")\n    plot_chart2017 <- left_join(plot_Mois,plot_chart2017, by=\"MOIS\")\n    \n    mean2015 <- data.frame(Mois=c(1:12),Budget=rep(sum(plot_chart[plot_chart$ANNEE==\"2015\",\"Budget\"], na.rm = TRUE)/12,12))\n    mean2016 <- data.frame(Mois=c(1:12),Budget=rep(sum(plot_chart[plot_chart$ANNEE==\"2016\",\"Budget\"], na.rm = TRUE)/12,12))\n    mean2017 <- data.frame(Mois=c(1:12),Budget=rep(sum(plot_chart[plot_chart$ANNEE==\"2017\",\"Budget\"], na.rm = TRUE)/nbRow,12))\n    highchart() %>%\n       hc_xAxis(categories =  c(\t\"janvier\",\t\"février\",\t\"mars\",\t\"avril\",\t\"mai\",\t\"juin\",\t\"juillet\",\t\"août\",\n                                 \"septembre\",\t\"octobre\",\t\"novembre\",\t\"décembre\"),\n                title = list(text = \"Mois\")) %>% \n      hc_yAxis(title = list(text = \"Montant\")) %>% \n      hc_add_series(data = plot_chart2015$Budget.y, name = \"CB 2015\",\n                    type = \"column\", color = \"#e5b13a\") %>% \n      hc_add_series(data = plot_chart2016$Budget.y, name = \"CB 2016\",\n                    type = \"column\", color = \"#4bd5ee\") %>% \n      hc_add_series(data = plot_chart2017$Budget.y, name = \"CB 2017\",\n                    type = \"column\", color = \"#076AB6\") %>% \n      hc_add_series(data = mean2015$Budget, name = \"Moyenne 2015\",\n                    type = \"line\", color = \"#e5b13a\") %>%\n      hc_add_series(data = mean2016$Budget, name = \"moyenne 2016\",\n                    type = \"line\", color = \"#4bd5ee\") %>%\n      hc_add_series(data = mean2017$Budget, name = \"moyenne 2017\",\n                    type = \"line\", color = \"#A0010F\") %>%\n      \n      # hc_yAxis(title = list(text = \"Montant Cartes\"), allowDecimals = FALSE) %>%\n      # hc_xAxis(categories = c(\t\"janvier\",\t\"février\",\t\"mars\",\t\"avril\",\t\"mai\",\t\"juin\",\t\"juillet\",\t\"août\",\n      #                          \"septembre\",\t\"octobre\",\t\"novembre\",\t\"décembre\"),\n      #          tickmarkPlacement = \"on\",\n      #          opposite = TRUE) %>%\n      hc_title(text = \"Montant CB depuis 2015\",\n               style = list(fontWeight = \"bold\")) %>% \n      hc_subtitle(text = \"Données Relevés\") %>%\n      # hc_tooltip(valueDecimals = 4,\n      #            pointFormat = \"Day: {point.x} <br> Diff: {point.y}\") %>%\n      hc_credits(enabled = TRUE, \n                 text = \"Sources: LCL\",\n                 style = list(fontSize = \"10px\")) %>%\n      hc_plotOptions(zoomtype = \"y\") %>%\n      hc_add_theme(hc_theme_538()) %>%\n      hc_tooltip(pointFormat =  \"Value: {point.y:.0f} Euros\")\n        \n      \n  })\n  \n  \n  output$hc <- renderHighchart({\n \n    CB_Data_LB_Plot <- CB_Data  %>% filter(ANNEE==2017) %>% group_by(Qui,Mois) %>% summarise(CB=sum(Montant)) \n    CB_Data_ALL_Plot <- CB_Data  %>% filter(ANNEE==2017) %>% group_by(Mois) %>% summarise(CB=sum(Montant)) %>%\n      mutate(Mois = factor(Mois))\n\n    CB_Data_LB_Plot <- CB_Data_LB_Plot %>% \n      mutate(Mois = factor(Mois))\n      \n    \n    hc <-  highchart() %>% \n      hc_add_series (name = \"Total Carte Sur le mois\", CB_Data_ALL_Plot, type = \"column\",marker = list(enabled = FALSE), \n                     color= c('#20A4F3'), hcaes(x = Mois, y = CB) ) %>%\n      hc_add_series (CB_Data_LB_Plot, type = \"line\",marker = list(enabled = FALSE), \n                     color= c('#E2FF0A', '#FF5151'), hcaes(x = Mois, y = CB,group=Qui) ) %>% \n      \n      hc_title(text = \"Evolution par mois\",\n               style = list(fontWeight = \"bold\")) %>% \n      hc_add_theme(hc_theme_flat()) %>%\n      hc_xAxis(categories=c(\"janvier\",\"février\",\"mars\",\"avril\",\"mai\",\"juin\",\"juillet\",\"aout\",\"septembre\",\"octobre\",\"novembre\",\"décembre\"),labels = list(rotation=-45)) #%>%\n      # hc_tooltip(crosshairs = TRUE, valueDecimals = 0,\n      #            pointFormat = \"Mois: {point.x} <br> montant en € : {point.y}\") \n      # \n    \n    # # Determine theme and apply to highchart ------------------------\n    \n    # theme <- switch(input$hc_theme,\n    #                 chalk = hc_theme_chalk(),\n    #                 darkunica = hc_theme_darkunica(),\n    #                 fivethirtyeight = hc_theme_538(),\n    #                 gridlight = hc_theme_gridlight(),\n    #                 handdrawn = hc_theme_handdrawn(),\n    #                 economist = hc_theme_economist(),\n    #                 financialTimes =hc_theme_ft(),\n    #                 Dotabuff=hc_theme_db(),\n    #                 flat=hc_theme_flat(),\n    #                 sandsignika = hc_theme_sandsignika()\n    # )\n    # hc <- hc %>%\n    #   hc_add_theme(theme)\n    \n    hc\n  })\n  \n  \n  output$hcontainer2 <- renderHighchart({\n    \n    # # On regarde pour la nourriture la comparaison par année\n    Data_Raw <- CB_Data %>% \n      filter (Client %in% input$mychooser$right) %>% \n      group_by(ANNEE,MOIS) %>%\n      summarise(Budget= sum(Montant)) \n    nomsMois <- c(\t\"janvier\",\t\"février\",\t\"mars\",\t\"avril\",\t\"mai\",\t\"juin\",\t\"juillet\",\t\"août\",\n       \"septembre\",\t\"octobre\",\t\"novembre\",\t\"décembre\")\n    #Data_Raw$MOIS <- nomsMois[Data_Raw$MOIS]\n    plot_chat2015 <- Data_Raw %>% filter (ANNEE == 2015)\n    plot_chat2016 <- Data_Raw %>% filter (ANNEE == 2016)\n    plot_chat2017 <- Data_Raw %>% filter (ANNEE == 2017)\n    plot_Mois <- data.frame(MOIS=factor(c(1:12)),Budget=rep(0,12))\n    plot_chat2015 <- left_join(plot_Mois,plot_chat2015, by=\"MOIS\")\n    plot_chat2016 <- left_join(plot_Mois,plot_chat2016, by=\"MOIS\")\n    plot_chat2017 <- left_join(plot_Mois,plot_chat2017, by=\"MOIS\")\n    plot_chat <-   CB_Data %>% \n      filter (ANNEE == 2017) %>% \n      group_by(ANNEE,MOIS) %>%\n      summarise(Budget= sum(Montant)) \n    mean2015 <- data.frame(Mois=c(1:12),Budget=rep(sum(plot_chat2015$Budget.y, na.rm = TRUE)/12,12))\n    mean2016 <- data.frame(Mois=c(1:12),Budget=rep(sum(plot_chat2016$Budget.y, na.rm = TRUE)/12,12))\n    mean2017 <- data.frame(Mois=c(1:12),Budget=rep(sum(plot_chat2017$Budget.y, na.rm = TRUE)/nrow(plot_chat),12))\n    highchart() %>%\n      hc_xAxis(categories=nomsMois, title = list(text = \"Mois\")) %>% \n      hc_yAxis(title = list(text = \"Montant\")) %>% \n      hc_add_series(data = plot_chat2015$Budget.y, name = \"CB 2015\",\n                    type = \"column\", color = \"#e5b13a\") %>% \n      hc_add_series(data = plot_chat2016$Budget.y, name = \"CB 2016\",\n                    type = \"column\", color = \"#4bd5ee\") %>% \n      hc_add_series(data = plot_chat2017$Budget.y, name = \"CB 2017\",\n                    type = \"column\", color = \"#076AB6\") %>% \n      hc_add_series(data = mean2015$Budget, name = \"Moyenne 2015\",\n                    type = \"line\", color = \"#e5b13a\") %>%\n      hc_add_series(data = mean2016$Budget, name = \"Moyenne 2016\",\n                    type = \"line\", color = \"#4bd5ee\") %>%\n      hc_add_series(data = mean2017$Budget, name = \"Moyenne 2017\",\n                    type = \"line\", color = \"#A0010F\") %>%\n\n      # hc_yAxis(title = list(text = \"Montant Cartes\"), allowDecimals = FALSE) %>%\n      # hc_xAxis(categories = c(\t\"janvier\",\t\"février\",\t\"mars\",\t\"avril\",\t\"mai\",\t\"juin\",\t\"juillet\",\t\"août\",\n      #                          \"septembre\",\t\"octobre\",\t\"novembre\",\t\"décembre\"),\n      #          tickmarkPlacement = \"on\",\n      #          opposite = TRUE) %>%\n      hc_title(text = \"Montant CB depuis 2015\",\n               style = list(fontWeight = \"bold\")) %>% \n      hc_subtitle(text = \"Données Relevés\") %>%\n      # hc_tooltip(valueDecimals = 4,\n      #            pointFormat = \"Day: {point.x} <br> Diff: {point.y}\") %>%\n      hc_credits(enabled = TRUE, \n                 text = \"Sources: LCL\",\n                 style = list(fontSize = \"10px\")) %>%\n      hc_plotOptions(zoomtype = \"y\") %>%\n      hc_add_theme(hc_theme_538()) %>%\n      hc_tooltip(pointFormat =  \"Value: {point.y:.0f} Euros\")\n    \n  })\n  \n  output$hcontainer3 <- renderHighchart({\n    \n    # # On regarde pour la nourriture la comparaison par année\n    plot_chart <-   CB_Data %>% \n      filter (Date >= as.POSIXct(input$dateRange[1]),Date <= as.POSIXct(input$dateRange[2]),Type %in% input$Type2) %>% \n      select(Client,Montant) %>% group_by(Client) %>%\n      summarize(Budget=sum(Montant))%>% arrange(Client)\n    plot_Pie <-   CB_Data %>% \n      filter (Date >= as.POSIXct(input$dateRange[1]),Date <= as.POSIXct(input$dateRange[2]), Type %in% input$Type2) %>% \n      select(Type,Montant) %>% group_by(Type) %>%\n      summarize(Budget=sum(Montant))\n    noms <- as.vector(plot_chart$Client)\n    highchart() %>%\n      hc_xAxis( categories= noms,\n               title = list(text = \"Commerçant\")) %>% \n      hc_yAxis(title = list(text = \"Montant\")) %>% \n      hc_add_series(data = plot_chart$Budget, name = \"Depenses sur la période\",\n                    type = \"column\") %>%\n      hc_add_series_labels_values(plot_Pie$Type, plot_Pie$Budget,\n                                  type = \"pie\",\n                                  name = \"Bar\", colorByPoint = TRUE, center = c('80%', '25%'),\n                                  size = 100, dataLabels = list(enabled = FALSE)) %>%\n      hc_tooltip(pointFormat =   \"TOTAL:  {point.y:.0f} Euros\") %>%\n      \n      hc_title(text = paste(\"Detail sur la période \",input$dateRange[1],\" au \", input$dateRange[2]),\n                style = list(fontWeight = \"bold\")) %>% \n       hc_subtitle(text = \"Données Relevés\") %>%\n       \n       hc_credits(enabled = TRUE, \n                  text = \"Sources: LCL\",\n                  style = list(fontSize = \"10px\")) %>%\n       hc_plotOptions(zoomtype = \"y\") %>%\n       hc_add_theme(hc_theme_538()) \n      # hc_tooltip(pointFormat =  \"Montant: {point.y:.0f} Euros\")\n    \n  })\n  \n  \n  output$Comapraison2015 <- renderValueBox({\n    #browser()\n    date1 <- gsub(\"2017\",\"2015\",input$dateRange[1])\n    date1 <- gsub(\"2016\",\"2015\",date1)\n    date2 <- gsub(\"2017\",\"2015\",input$dateRange[2])\n    date2 <- gsub(\"2016\",\"2015\",date2)\n    Total <- CB_Data %>% \n      filter (Date >= date1,Date <= as.POSIXct(paste(date2,\" 23:59:59\")),Type %in% input$Type2) %>% \n      select(Montant)\n    \n   \n    valueBox(\n      paste(sum(Total$Montant) ,\"Euros\"),\n      paste(\"2015\",date1,date2,sep = \"-\"),\n      icon = icon(\"credit-card\")\n    )\n  })\n  \n  output$Comapraison2016 <- renderValueBox({\n    date1 <- gsub(\"2017\",\"2016\",input$dateRange[1])\n    date1 <- gsub(\"2015\",\"2016\",date1)\n    date2 <- gsub(\"2017\",\"2016\",input$dateRange[2])\n    date2 <- gsub(\"2015\",\"2016\",date2)\n    Total <- CB_Data %>% \n      filter (Date >= as.POSIXct(date1),Date <= as.POSIXct(paste(date2,\" 23:59:59\")),Type %in% input$Type2) %>% \n      select(Montant)\n    valueBox(\n      paste(sum(Total$Montant) ,\"Euros\"),\n      paste(\"2016\",date1,date2,sep = \"-\"),\n      color = \"green\",\n      icon = icon(\"credit-card\")\n    )\n  \n  })\n  \n  output$Comapraison2017 <- renderValueBox({\n    date1 <- gsub(\"2015\",\"2017\",input$dateRange[1])\n    date1 <- gsub(\"2016\",\"2017\",date1)\n    date2 <- gsub(\"2015\",\"2017\",input$dateRange[2])\n    date2 <- gsub(\"2016\",\"2017\",date2)\n    Total <- CB_Data %>% \n      filter (Date >= as.POSIXct(date1),Date <= as.POSIXct(paste(date2,\" 23:59:59\")),Type %in% input$Type2) %>% \n      select(Montant)\n    valueBox(\n      paste(sum(Total$Montant) ,\"Euros\"),\n      paste(\"Période du : \",date1,date2,sep = \" \"),\n      color = \"orange\",\n      icon = icon(\"credit-card\")\n    )\n  })\n  \n  output$Commerce2015 <- renderValueBox({\n    #browser()\n    Total <- CB_Data %>% \n      filter (Client %in% input$mychooser$right,ANNEE==\"2015\") %>% \n      group_by(ANNEE) %>%\n      summarise(Budget= sum(Montant))\n    \n    \n    valueBox(\n      paste(Total$Budget ,\" Euros\"),\n      \"2015\",\n      icon = icon(\"credit-card\")\n    )\n  })\n  output$Commerce2016 <- renderValueBox({\n    #browser()\n    Total <- CB_Data %>% \n      filter (Client %in% input$mychooser$right,ANNEE==\"2016\") %>% \n      group_by(ANNEE) %>%\n      summarise(Budget= sum(Montant))\n    \n    \n    valueBox(\n      paste(Total$Budget ,\" Euros\"),\n      \"2016\",\n      color = \"green\",\n      icon = icon(\"credit-card\")\n    )\n  })\n  \n  output$Commerce2017 <- renderValueBox({\n    #browser()\n    Total <- CB_Data %>% \n      filter (Client %in% input$mychooser$right,ANNEE==\"2017\") %>% \n      group_by(ANNEE) %>%\n      summarise(Budget= sum(Montant))\n    \n    \n    valueBox(\n      paste(Total$Budget ,\" Euros\"),\n      \"2017\",\n      color = \"orange\",\n      icon = icon(\"credit-card\")\n    )\n  })\n  \n  \n}",
    "created" : 1493583571962.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3619636576",
    "id" : "1331E89A",
    "lastKnownWriteTime" : 1503317785,
    "last_content_update" : 1503317785975,
    "path" : "D:/tmp/CB/server.R",
    "project_path" : "server.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}